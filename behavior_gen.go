// Code generated by behaviorgen; DO NOT EDIT.

package main

import "fmt"

func (x Trans) Behavior() string {
	return fmt.Sprintf("&%s", x.Name())
}

func (x Trans) Name() string {
	return "trans"
}

func (x Trans) Args() []string {
	return []string{ }
}

func (x None) Behavior() string {
	return fmt.Sprintf("&%s", x.Name())
}

func (x None) Name() string {
	return "none"
}

func (x None) Args() []string {
	return []string{ }
}

func (x Lt) Behavior() string {
	return fmt.Sprintf("&%s %s %s", x.Name(), x.Layer, x.Tap)
}

func (x Lt) Name() string {
	return "lt"
}

func (x Lt) Args() []string {
	return []string{ fmt.Sprintf("%s", x.Layer), fmt.Sprintf("%s", x.Tap), }
}

func (x To) Behavior() string {
	return fmt.Sprintf("&%s %s", x.Name(), x.Layer)
}

func (x To) Name() string {
	return "to"
}

func (x To) Args() []string {
	return []string{ fmt.Sprintf("%s", x.Layer), }
}

func (x Mt) Behavior() string {
	return fmt.Sprintf("&%s %s %s", x.Name(), x.Hold, x.Tap)
}

func (x Mt) Name() string {
	return "mt"
}

func (x Mt) Args() []string {
	return []string{ fmt.Sprintf("%s", x.Hold), fmt.Sprintf("%s", x.Tap), }
}

func (x Kp) Behavior() string {
	return fmt.Sprintf("&%s %s", x.Name(), x.Tap)
}

func (x Kp) Name() string {
	return "kp"
}

func (x Kp) Args() []string {
	return []string{ fmt.Sprintf("%s", x.Tap), }
}

func (x KpKp) Behavior() string {
	return fmt.Sprintf("&%s %s %s", x.Name(), x.Hold, x.Tap)
}

func (x KpKp) Name() string {
	return "kpkp"
}

func (x KpKp) Args() []string {
	return []string{ fmt.Sprintf("%s", x.Hold), fmt.Sprintf("%s", x.Tap), }
}

func (x Rmt) Behavior() string {
	return fmt.Sprintf("&%s %s %s", x.Name(), x.Hold, x.Tap)
}

func (x Rmt) Name() string {
	return "rmt"
}

func (x Rmt) Args() []string {
	return []string{ fmt.Sprintf("%s", x.Hold), fmt.Sprintf("%s", x.Tap), }
}
