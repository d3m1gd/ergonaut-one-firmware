#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define MOVER 1
#define NUMER 2
#define QUICK 3
#define REPEAT 4
#define SYS 5
#define PARENS 6
#define CHAINS 7
#define CHAINS_G 8
#define CHAINS_GI 9
#define CHAINS_S 10
#define CHAINS_SD 11

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

&caps_word {
    continue-list = <UNDER BSPC DEL LEFT RIGHT UP DOWN PG_UP PG_DN>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    behaviors {

        LayerOff: LayerOff {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Layer Off";
            toggle-mode = "off";
        };

        MMkpDQTkpGRAVE: ModMorphkpDQTkpGRAVE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        MMkpEQUALkpEQUAL: ModMorphkpEQUALkpEQUAL {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        MMkpMINUSkpPLUS: ModMorphkpMINUSkpPLUS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp PLUS>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        MMtoMOVERkpUNDER: ModMorphtoMOVERkpUNDER {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&to MOVER &kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        XdgConfigKp: XdgConfigKepPress {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&XdgConfig &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <350>;
        };

        htCodeBlockbquotes: HoldTapCodeBlockbquotes {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&CodeBlock &bquotes>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        kpkp: KeyPressKepPress {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&TapNoRepeat &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        mMMkpMINUSkpPLUS: ModMMkpMINUSkpPLUS {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &MMkpMINUSkpPLUS>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        moMMtoMOVERkpUNDER: MomMMtoMOVERkpUNDER {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &MMtoMOVERkpUNDER>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        moto: MomentaryTo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &to>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        sll: StickyLayerLong {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            quick-release;
            release-after-ms = <2000>;
        };
    };

    macros {

        CodeBlock: CodeBlock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp GRAVE &kp LEFT &kp GRAVE &kp LEFT>;
        };

        GoIfError: GoIfError {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp O &kp SPACE &kp I &kp F &kp E &kp LEFT &kp N &kp LEFT &kp I &kp LEFT &kp F &kp LEFT>;
        };

        OffThenShiftEnter: OffThenShiftEnter {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&LayerOff PARENS &macro_press &ShiftEnter &macro_pause_for_release &macro_release &ShiftEnter>;
        };

        OffThenmtLSHIFTRIGHT: OffThenmtLSHIFTRIGHT {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&LayerOff PARENS &macro_press &mt LSHIFT RIGHT &macro_pause_for_release &macro_release &mt LSHIFT RIGHT>;
        };

        ShiftEnter: ShiftEnter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RET &kp UP &kp END &kp RET>;
        };

        TapNoRepeat: TapNoRepeat {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_pause_for_release>;
        };

        Wmoto: Wrapmoto {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_press &macro_param_1to1 &macro_param_2to2 &moto MACRO_PLACEHOLDER MACRO_PLACEHOLDER &macro_pause_for_release &macro_release &macro_param_1to1 &macro_param_2to2 &moto MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        XdgConfig: XdgConfig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DOLLAR &kp LS(H) &kp LS(O) &kp LS(M) &kp LS(E) &kp SLASH &kp DOT &kp C &kp O &kp N &kp F &kp I &kp G &kp DQT &kp SLASH>;
        };

        bquotes: OpenClose_bquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT &to PARENS>;
        };

        brackets: OpenClose_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT &to PARENS>;
        };

        bspcdel: BackspaceDelete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DEL &kp BSPC>;
        };

        curlies: OpenClose_curlies {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT &to PARENS>;
        };

        dquotes: OpenClose_dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT &to PARENS>;
        };

        off1l11: OffMOVERL11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp TAB &macro_pause_for_release &macro_release &kp TAB>;
        };

        off1l12: OffMOVERL12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp Q &macro_pause_for_release &macro_release &kp Q>;
        };

        off1l13: OffMOVERL13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp W &macro_pause_for_release &macro_release &kp W>;
        };

        off1l14: OffMOVERL14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp E &macro_pause_for_release &macro_release &kp E>;
        };

        off1l15: OffMOVERL15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp R &macro_pause_for_release &macro_release &kp R>;
        };

        off1l16: OffMOVERL16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kpkp RG(T) T &macro_pause_for_release &macro_release &kpkp RG(T) T>;
        };

        off1l21: OffMOVERL21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LSHIFT BACKSPACE &macro_pause_for_release &macro_release &mt LSHIFT BACKSPACE>;
        };

        off1l22: OffMOVERL22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp A &macro_pause_for_release &macro_release &kp A>;
        };

        off1l23: OffMOVERL23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LSHIFT S &macro_pause_for_release &macro_release &mt LSHIFT S>;
        };

        off1l24: OffMOVERL24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LGUI D &macro_pause_for_release &macro_release &mt LGUI D>;
        };

        off1l25: OffMOVERL25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LALT F &macro_pause_for_release &macro_release &mt LALT F>;
        };

        off1l26: OffMOVERL26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp G &macro_pause_for_release &macro_release &kp G>;
        };

        off1l31: OffMOVERL31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mMMkpMINUSkpPLUS LCTRL 0 &macro_pause_for_release &macro_release &mMMkpMINUSkpPLUS LCTRL 0>;
        };

        off1l32: OffMOVERL32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp Z &macro_pause_for_release &macro_release &kp Z>;
        };

        off1l33: OffMOVERL33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp X &macro_pause_for_release &macro_release &kp X>;
        };

        off1l34: OffMOVERL34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &XdgConfigKp 0 C &macro_pause_for_release &macro_release &XdgConfigKp 0 C>;
        };

        off1l35: OffMOVERL35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp V &macro_pause_for_release &macro_release &kp V>;
        };

        off1l36: OffMOVERL36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp B &macro_pause_for_release &macro_release &kp B>;
        };

        off1l41: OffMOVERL41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &moto QUICK CHAINS &macro_pause_for_release &macro_release &moto QUICK CHAINS>;
        };

        off1l42: OffMOVERL42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &moMMtoMOVERkpUNDER NUMER 0 &macro_pause_for_release &macro_release &moMMtoMOVERkpUNDER NUMER 0>;
        };

        off1l43: OffMOVERL43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LCTRL ESCAPE &macro_pause_for_release &macro_release &mt LCTRL ESCAPE>;
        };

        off1r11: OffMOVERR11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp Y &macro_pause_for_release &macro_release &kp Y>;
        };

        off1r12: OffMOVERR12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp U &macro_pause_for_release &macro_release &kp U>;
        };

        off1r13: OffMOVERR13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp I &macro_pause_for_release &macro_release &kp I>;
        };

        off1r14: OffMOVERR14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp O &macro_pause_for_release &macro_release &kp O>;
        };

        off1r15: OffMOVERR15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp P &macro_pause_for_release &macro_release &kp P>;
        };

        off1r16: OffMOVERR16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp LBKT &macro_pause_for_release &macro_release &kp LBKT>;
        };

        off1r21: OffMOVERR21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp H &macro_pause_for_release &macro_release &kp H>;
        };

        off1r22: OffMOVERR22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LALT J &macro_pause_for_release &macro_release &mt LALT J>;
        };

        off1r23: OffMOVERR23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LGUI K &macro_pause_for_release &macro_release &mt LGUI K>;
        };

        off1r24: OffMOVERR24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LSHIFT L &macro_pause_for_release &macro_release &mt LSHIFT L>;
        };

        off1r25: OffMOVERR25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kpkp RG(SEMI) SEMI &macro_pause_for_release &macro_release &kpkp RG(SEMI) SEMI>;
        };

        off1r26: OffMOVERR26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kpkp RG(SQT) SQT &macro_pause_for_release &macro_release &kpkp RG(SQT) SQT>;
        };

        off1r31: OffMOVERR31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp N &macro_pause_for_release &macro_release &kp N>;
        };

        off1r32: OffMOVERR32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kpkp RG(M) M &macro_pause_for_release &macro_release &kpkp RG(M) M>;
        };

        off1r33: OffMOVERR33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kpkp RG(COMMA) COMMA &macro_pause_for_release &macro_release &kpkp RG(COMMA) COMMA>;
        };

        off1r34: OffMOVERR34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kpkp RG(DOT) DOT &macro_pause_for_release &macro_release &kpkp RG(DOT) DOT>;
        };

        off1r35: OffMOVERR35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp SLASH &macro_pause_for_release &macro_release &kp SLASH>;
        };

        off1r36: OffMOVERR36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &kp BACKSLASH &macro_pause_for_release &macro_release &kp BACKSLASH>;
        };

        off1r41: OffMOVERR41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &mt LCTRL RETURN &macro_pause_for_release &macro_release &mt LCTRL RETURN>;
        };

        off1r42: OffMOVERR42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &lt NUMER SPACE &macro_pause_for_release &macro_release &lt NUMER SPACE>;
        };

        off1r43: OffMOVERR43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff MOVER &macro_press &Wmoto QUICK CHAINS &macro_pause_for_release &macro_release &Wmoto QUICK CHAINS>;
        };

        off6l11: OffPARENSL11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp TAB &macro_pause_for_release &macro_release &kp TAB>;
        };

        off6l12: OffPARENSL12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp Q &macro_pause_for_release &macro_release &kp Q>;
        };

        off6l13: OffPARENSL13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp W &macro_pause_for_release &macro_release &kp W>;
        };

        off6l14: OffPARENSL14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp E &macro_pause_for_release &macro_release &kp E>;
        };

        off6l15: OffPARENSL15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp R &macro_pause_for_release &macro_release &kp R>;
        };

        off6l16: OffPARENSL16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kpkp RG(T) T &macro_pause_for_release &macro_release &kpkp RG(T) T>;
        };

        off6l21: OffPARENSL21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LSHIFT BACKSPACE &macro_pause_for_release &macro_release &mt LSHIFT BACKSPACE>;
        };

        off6l22: OffPARENSL22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp A &macro_pause_for_release &macro_release &kp A>;
        };

        off6l23: OffPARENSL23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LSHIFT S &macro_pause_for_release &macro_release &mt LSHIFT S>;
        };

        off6l24: OffPARENSL24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LGUI D &macro_pause_for_release &macro_release &mt LGUI D>;
        };

        off6l25: OffPARENSL25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LALT F &macro_pause_for_release &macro_release &mt LALT F>;
        };

        off6l26: OffPARENSL26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp G &macro_pause_for_release &macro_release &kp G>;
        };

        off6l31: OffPARENSL31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mMMkpMINUSkpPLUS LCTRL 0 &macro_pause_for_release &macro_release &mMMkpMINUSkpPLUS LCTRL 0>;
        };

        off6l32: OffPARENSL32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp Z &macro_pause_for_release &macro_release &kp Z>;
        };

        off6l33: OffPARENSL33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp X &macro_pause_for_release &macro_release &kp X>;
        };

        off6l34: OffPARENSL34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &XdgConfigKp 0 C &macro_pause_for_release &macro_release &XdgConfigKp 0 C>;
        };

        off6l35: OffPARENSL35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp V &macro_pause_for_release &macro_release &kp V>;
        };

        off6l36: OffPARENSL36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp B &macro_pause_for_release &macro_release &kp B>;
        };

        off6l41: OffPARENSL41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &moto QUICK CHAINS &macro_pause_for_release &macro_release &moto QUICK CHAINS>;
        };

        off6l42: OffPARENSL42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &moMMtoMOVERkpUNDER NUMER 0 &macro_pause_for_release &macro_release &moMMtoMOVERkpUNDER NUMER 0>;
        };

        off6l43: OffPARENSL43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LCTRL ESCAPE &macro_pause_for_release &macro_release &mt LCTRL ESCAPE>;
        };

        off6r11: OffPARENSR11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp Y &macro_pause_for_release &macro_release &kp Y>;
        };

        off6r12: OffPARENSR12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp U &macro_pause_for_release &macro_release &kp U>;
        };

        off6r13: OffPARENSR13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp I &macro_pause_for_release &macro_release &kp I>;
        };

        off6r14: OffPARENSR14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp O &macro_pause_for_release &macro_release &kp O>;
        };

        off6r15: OffPARENSR15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp P &macro_pause_for_release &macro_release &kp P>;
        };

        off6r16: OffPARENSR16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp LBKT &macro_pause_for_release &macro_release &kp LBKT>;
        };

        off6r21: OffPARENSR21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp H &macro_pause_for_release &macro_release &kp H>;
        };

        off6r22: OffPARENSR22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LALT J &macro_pause_for_release &macro_release &mt LALT J>;
        };

        off6r23: OffPARENSR23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LGUI K &macro_pause_for_release &macro_release &mt LGUI K>;
        };

        off6r24: OffPARENSR24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LSHIFT L &macro_pause_for_release &macro_release &mt LSHIFT L>;
        };

        off6r25: OffPARENSR25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kpkp RG(SEMI) SEMI &macro_pause_for_release &macro_release &kpkp RG(SEMI) SEMI>;
        };

        off6r26: OffPARENSR26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kpkp RG(SQT) SQT &macro_pause_for_release &macro_release &kpkp RG(SQT) SQT>;
        };

        off6r31: OffPARENSR31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp N &macro_pause_for_release &macro_release &kp N>;
        };

        off6r32: OffPARENSR32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kpkp RG(M) M &macro_pause_for_release &macro_release &kpkp RG(M) M>;
        };

        off6r33: OffPARENSR33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kpkp RG(COMMA) COMMA &macro_pause_for_release &macro_release &kpkp RG(COMMA) COMMA>;
        };

        off6r34: OffPARENSR34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kpkp RG(DOT) DOT &macro_pause_for_release &macro_release &kpkp RG(DOT) DOT>;
        };

        off6r35: OffPARENSR35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp SLASH &macro_pause_for_release &macro_release &kp SLASH>;
        };

        off6r36: OffPARENSR36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &kp BACKSLASH &macro_pause_for_release &macro_release &kp BACKSLASH>;
        };

        off6r41: OffPARENSR41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &mt LCTRL RETURN &macro_pause_for_release &macro_release &mt LCTRL RETURN>;
        };

        off6r42: OffPARENSR42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &lt NUMER SPACE &macro_pause_for_release &macro_release &lt NUMER SPACE>;
        };

        off6r43: OffPARENSR43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOff PARENS &macro_press &Wmoto QUICK CHAINS &macro_pause_for_release &macro_release &Wmoto QUICK CHAINS>;
        };

        parens: OpenClose_parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT &to PARENS>;
        };

        squotes: OpenClose_squotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT &to PARENS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        System {
            bindings = <&sll SYS>;
            key-positions = <4 5>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
        };

        LeftEnter {
            bindings = <&kp RETURN>;
            key-positions = <37 38>;
        };

        LeftSpace {
            bindings = <&kp SPACE>;
            key-positions = <36 37>;
        };

        RightCaps {
            bindings = <&caps_word>;
            key-positions = <20 21>;
        };

        RightHomeMods {
            bindings = <&kp LS(LA(LWIN))>;
            key-positions = <19 20 21>;
        };

        MiddleMouse {
            bindings = <&mkp MCLK>;
            key-positions = <27 28>;
            timeout-ms = <100>;
            require-prior-idle-ms = <200>;
        };

        Curlies {
            bindings = <&curlies>;
            key-positions = <16 19>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        Parens {
            bindings = <&parens>;
            key-positions = <15 20>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        Brackets {
            bindings = <&brackets>;
            key-positions = <14 21>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        DoubleQuotes {
            bindings = <&dquotes>;
            key-positions = <4 7>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        SingleQuotes {
            bindings = <&squotes>;
            key-positions = <3 8>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        BackQuotes {
            bindings = <&htCodeBlockbquotes 0 0>;
            key-positions = <2 9>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB                    &kp Q  &kp W         &kp E               &kp R                        &kpkp RG(T) T     &kp Y             &kp U            &kp I                  &kp O              &kp P                &kp LBKT
&mt LSHIFT BACKSPACE       &kp A  &mt LSHIFT S  &mt LGUI D          &mt LALT F                   &kp G             &kp H             &mt LALT J       &mt LGUI K             &mt LSHIFT L       &kpkp RG(SEMI) SEMI  &kpkp RG(SQT) SQT
&mMMkpMINUSkpPLUS LCTRL 0  &kp Z  &kp X         &XdgConfigKp 0 C    &kp V                        &kp B             &kp N             &kpkp RG(M) M    &kpkp RG(COMMA) COMMA  &kpkp RG(DOT) DOT  &kp SLASH            &kp BACKSLASH
                                                &moto QUICK CHAINS  &moMMtoMOVERkpUNDER NUMER 0  &mt LCTRL ESCAPE  &mt LCTRL RETURN  &lt NUMER SPACE  &Wmoto QUICK CHAINS
            >;
        };

        MOVER {
            bindings = <
&off1l11  &off1l12  &off1l13  &off1l14  &off1l15  &off1l16  &off1r11  &off1r12       &off1r13     &off1r14          &off1r15  &off1r16
&off1l21  &off1l22  &off1l23  &off1l24  &off1l25  &off1l26  &kp LEFT  &mt LALT DOWN  &mt LGUI UP  &mt LSHIFT RIGHT  &off1r25  &off1r26
&off1l31  &off1l32  &off1l33  &off1l34  &off1l35  &off1l36  &off1r31  &off1r32       &off1r33     &off1r34          &off1r35  &off1r36
                              &off1l41  &off1l42  &to BASE  &off1r41  &off1r42       &off1r43
            >;
        };

        NUMER {
            bindings = <
&kp LS(TAB)     &trans  &trans  &trans  &trans          &kp TILDE  &kp N0             &kp N1       &kp N2              &kp N3            &trans         &kp RBKT
&kp DELETE      &trans  &trans  &trans  &trans          &trans     &MMkpEQUALkpEQUAL  &mt LALT N4  &mt LGUI N5         &mt LSHIFT N6     &kp COLON      &MMkpDQTkpGRAVE
&mt LCTRL PLUS  &trans  &trans  &trans  &kp LS(INSERT)  &trans     &kp PLUS           &kp N7       &kpkp RG(COMMA) N8  &kpkp RG(DOT) N9  &kp LS(SLASH)  &kp PIPE
                                &trans  &kp UNDER       &trans     &trans             &trans       &trans
            >;
        };

        QUICK {
            bindings = <
&trans  &trans  &trans  &trans  &kp LG(C_VOL_UP)  &kp C_VOL_UP  &trans         &trans          &trans          &trans          &kp PSCRN  &kp LC(RBKT)
&trans  &trans  &trans  &trans  &kp LG(C_VOL_DN)  &kp C_VOL_DN  &kp HOME       &mt LALT PG_DN  &mt LGUI PG_UP  &mt LSHIFT END  &trans     &trans
&trans  &trans  &trans  &trans  &trans            &trans        &trans         &trans          &trans          &trans          &trans     &trans
                        &trans  &trans            &trans        &mt LCTRL F10  &kp F11         &kp F12
            >;
        };

        REPEAT {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SYS {
            bindings = <
&bootloader   &none         &none           &none         &sys_reset    &none         &none           &out OUT_USB  &none  &none  &none  &none
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2    &bt BT_SEL 1  &bt BT_SEL 0  &none         &none           &none         &none  &none  &none  &none
&none         &none         &bt BT_CLR_ALL  &bt BT_CLR    &out OUT_USB  &out OUT_BLE  &bt BT_CLR_ALL  &none         &none  &none  &none  &none
                                            &none         &none         &none         &none           &none         &none
            >;
        };

        PARENS {
            bindings = <
&off6l11  &off6l12  &off6l13  &off6l14  &off6l15           &off6l16  &off6r11                   &off6r12  &off6r13  &off6r14                      &off6r15  &off6r16
&bspcdel  &off6l22  &off6l23  &off6l24  &off6l25           &off6l26  &off6r21                   &off6r22  &off6r23  &OffThenmtLSHIFTRIGHT PARENS  &off6r25  &off6r26
&off6l31  &off6l32  &off6l33  &off6l34  &off6l35           &off6l36  &off6r31                   &off6r32  &off6r33  &off6r34                      &off6r35  &off6r36
                              &off6l41  &moto NUMER MOVER  &to BASE  &OffThenShiftEnter PARENS  &off6r42  &off6r43
            >;
        };

        CHAINS {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE      &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to CHAINS_G  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE      &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE  &to BASE  &to BASE      &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_G {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to CHAINS_GI  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE
                              &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_GI {
            bindings = <
&to BASE  &to BASE  &to BASE      &GoIfError  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to CHAINS_S  &to BASE    &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE      &to BASE    &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                                  &to BASE    &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_S {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to CHAINS_SD  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_SD {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &kp X     &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };
    };
};
