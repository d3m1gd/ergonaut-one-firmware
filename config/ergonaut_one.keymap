#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        lmt: lmt {
            compatible = "zmk,behavior-hold-tap";
            label = "Left Mod Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <30 31 32 33 35 34 23 6 7 9 10 11 19 20 21 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 41 30 31 39 40 41>;
            quick-tap-ms = <200>;
        };

        rmt: rmt {
            compatible = "zmk,behavior-hold-tap";
            label = "Right Mod Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        llt: llt {
            compatible = "zmk,behavior-hold-tap";
            label = "Left Layer Tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <30 31 32 33 35 34 23 6 7 9 10 11 19 20 21 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 41 18 19 30 31 39 40 41>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };

        rlt: rlt {
            compatible = "zmk,behavior-hold-tap";
            label = "Right Layer Tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-on-release;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 36 37 38>;
        };

        lshkp: lshkp {
            compatible = "zmk,behavior-hold-tap";
            label = "Left Shift KeyPress";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <30 31 32 33 35 34 23 6 7 9 10 11 19 20 21 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 30 31 36 37 38>;
            quick-tap-ms = <200>;
            hold-trigger-on-release;
        };

        rst: rst {
            compatible = "zmk,behavior-hold-tap";
            label = "Right Shift Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 40 41 39>;
            hold-trigger-on-release;
        };

        htslsl: htslsl {
            compatible = "zmk,behavior-hold-tap";
            label = "Hold Tap 2Sticky  Layers";
            bindings = <&sl>, <&sll>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        htkpkp: htkpkp {
            compatible = "zmk,behavior-hold-tap";
            label = "HoldTap 2KeyPress";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };

        htkpkpnr: htkpkpnr {
            compatible = "zmk,behavior-hold-tap";
            label = "2key press no repeat";
            bindings = <&kpnr>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        htkpcaps: htkpcaps {
            compatible = "zmk,behavior-hold-tap";
            label = "keypress caps behavior";
            bindings = <&caps_word>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        htkptog: htkptog {
            compatible = "zmk,behavior-hold-tap";
            label = "KeyPress ToggleLayer";
            bindings = <&tog>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        sls: sls {
            compatible = "zmk,behavior-sticky-key";
            label = "Short Sticky Layer";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <200>;
            quick-release;
            ignore-modifiers;
        };

        htkpsll: htkpsll {
            compatible = "zmk,behavior-hold-tap";
            label = "KepPress StickyLayerLong";
            bindings = <&sll>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        sll: sll {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky Layer Long";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            quick-release;
        };

        skl: skl {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky Key Long";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            ignore-modifiers;
            quick-release;
        };

        hthomekp: hthomekp {
            compatible = "zmk,behavior-hold-tap";
            label = "HTHOMEKP";
            bindings = <&homeconfig>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        lazygit: bg_lazygit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z) &kp L &kp A &kp Z &kp Y &kp G &kp I &kp T &kp SEMI &kp SPACE &kp F &kp G &kp RET>;
            label = "BG_LAZYGIT";
        };

        sksls: slmod {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &skl MACRO_PLACEHOLDER &macro_param_2to1 &sls MACRO_PLACEHOLDER>;
            label = "SLMOD";
        };

        spaceand: spaceand {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&kp SPACE &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "SPACEAND";
        };

        noslcaps: nosl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp K_CANCEL &caps_word>;
            label = "NOSL";
        };

        kpnr: kpnr {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>;

            label = "KeyPress No Repeat";
        };

        kpsls: kpsls {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &sls MACRO_PLACEHOLDER>;
            label = "KeyPress Sticky Layer Short";
        };

        kpsl: kpsl {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &sl MACRO_PLACEHOLDER>;
            label = "KeyPress StickyLayer";
        };

        kpsll: kpsll {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &sll MACRO_PLACEHOLDER>;
            label = "KPSLL";
        };

        homeconfig: homeconfig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DLLR &kp LS(H) &kp LS(O) &kp LS(M) &kp LS(E) &kp FSLH &kp DOT &kp C &kp O &kp N &kp F &kp I &kp G &kp DQT &kp FSLH>;
            label = "HOMECONFIG";
        };

        kprsl: kprsl {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&macro_param_2to1 &sl MACRO_PLACEHOLDER>;

            label = "KeyPress Repeat StickyLayer";
        };
    };

    combos {
        compatible = "zmk,combos";

        csd {
            bindings = <&skl LA(LEFT_GUI)>;
            key-positions = <15 14>;
            layers = <0>;
        };

        cdf {
            bindings = <&skl LC(LEFT_GUI)>;
            key-positions = <15 16>;
            layers = <0>;
        };

        cad {
            bindings = <&skl LS(LEFT_GUI)>;
            key-positions = <15 13>;
            layers = <0>;
        };

        caf {
            bindings = <&skl LS(LEFT_CONTROL)>;
            key-positions = <13 16>;
            layers = <0>;
        };

        cas {
            bindings = <&skl LS(LEFT_ALT)>;
            key-positions = <14 13>;
            layers = <0>;
        };

        csf {
            bindings = <&skl LA(LEFT_CONTROL)>;
            key-positions = <16 14>;
            layers = <0>;
        };

        csdf {
            bindings = <&skl LA(LG(LEFT_CONTROL))>;
            key-positions = <16 14 15>;
            layers = <0>;
        };

        casd {
            bindings = <&skl LA(LS(LEFT_GUI))>;
            key-positions = <14 15 13>;
            layers = <0>;
        };

        casf {
            bindings = <&skl LA(LS(LEFT_CONTROL))>;
            key-positions = <14 13 16>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp RIGHT_BRACKET          &htkpkpnr LC(Q) Q  &kp W  &kp E            &kp R         &kp T             &kp Y                    &htkpkpnr EXCLAMATION U  &htkpkpnr AT_SIGN I       &htkpkpnr HASH O   &kp P                      &kp LBKT
&lshkp LEFT_SHIFT GRAVE    &lshkp LSHFT A     &kp S  &lmt LEFT_GUI D  &kp F         &kp G             &kp H                    &htkpkpnr DOLLAR J       &htkpkpnr PERCENT K       &htkpkpnr CARET L  &htkpkpnr COLON SEMICOLON  &htkpcaps 0 APOSTROPHE
&lshkp LEFT_CONTROL EQUAL  &kp Z              &kp X  &hthomekp 0 C    &kp V         &kp B             &kp N                    &htkpkpnr AMPERSAND M    &htkpkpnr ASTERISK COMMA  &kp DOT            &kp SLASH                  &kp BACKSLASH
                                                     &llt 2 TAB       &llt 1 SPACE  &mt LCTRL ESCAPE  &mt RIGHT_CONTROL ENTER  &htslsl 5 4              &none
            >;
        };

        lower_layer {
            bindings = <
&trans  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans  &trans  &kp N7        &kp N8        &kp N9        &trans  &trans
                        &trans                &trans                 &trans  &trans  &kp N0        &kp DELETE
            >;
        };

        raise_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN            &kp PAGE_UP        &kp INSERT           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT  &rmt RIGHT_CONTROL DOWN  &rmt LEFT_META UP  &rmt LEFT_ALT RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp HOME                 &kp END            &kp PRINTSCREEN      &trans  &trans
                        &trans  &trans  &trans  &trans    &kp N0                   &kp DELETE
            >;
        };

        BTFN {
            bindings = <
&bootloader  &bt BT_CLR_ALL  &none         &none         &none         &none         &kp C_VOLUME_UP    &kp F1   &kp F2   &kp F3  &none  &bootloader
&none        &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp K_MUTE         &kp F4   &kp F5   &kp F6  &none  &none
&sys_reset   &bt BT_CLR      &none         &none         &none         &none         &kp C_VOLUME_DOWN  &kp F7   &kp F8   &kp F9  &none  &sys_reset
                                           &none         &none         &none         &kp F10            &kp F11  &kp F12
            >;
        };

        QUICK {
            bindings = <
&kp LG(N0)  &spaceand Q      &htkpkpnr RIGHT_BRACE LEFT_BRACE  &htkpkpnr RIGHT_BRACKET LEFT_BRACKET  &htkpkpnr RIGHT_PARENTHESIS LEFT_PARENTHESIS  &trans        &spaceand Y         &kp LG(N1)     &kp LG(N2)       &kp LG(N3)  &trans             &trans
&noslcaps   &skl LEFT_SHIFT  &skl LEFT_ALT                     &skl LEFT_GUI                         &skl LEFT_CONTROL                             &trans        &kpsl LG(PLUS) 4    &kp LG(N4)     &kp LG(N5)       &kp LG(N6)  &kpsl LG(MINUS) 4  &kp LG(C)
&trans      &trans           &trans                            &kp LS(INSERT)                        &kp LS(LC(V))                                 &trans        &trans              &kp LG(N7)     &kp LG(N8)       &kp LG(N9)  &trans             &trans
                                                               &kpsls MINUS 4                        &kpsls UNDER 4                                &kp K_CANCEL  &kprsl BACKSPACE 4  &kp LG(SPACE)  &kprsl DELETE 4
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &kpsll N1 5  &kpsll N2 5  &kpsll N3 5  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &lazygit      &trans  &kpsll N4 5  &kpsll N5 5  &kpsll N6 5  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans  &kpsll N7 5  &kpsll N8 5  &kpsll N9 5  &trans  &trans
                        &trans  &trans  &kp K_CANCEL  &trans  &kpsll N0 5  &trans
            >;
        };

        META {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans        &trans     &trans     &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &kpsl H 6  &kpsl J 6  &kpsl K 6  &kpsl L 6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans        &trans     &trans     &trans     &trans     &trans  &trans
                        &trans  &trans  &kp K_CANCEL  &trans     &trans     &trans
            >;
        };
    };
};
