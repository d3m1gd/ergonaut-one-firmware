#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define MOVER 1
#define NUMER 2
#define QUICK 3
#define SYS 4
#define PARENS 5
#define CHAINS 6
#define CHAINS_F 7
#define CHAINS_G 8
#define CHAINS_GI 9
#define CHAINS_S 10
#define CHAINS_SD 11

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

&caps_word {
    continue-list = <UNDER BSPC DEL LEFT RIGHT UP DOWN PG_UP PG_DN>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    behaviors {

        LayerOff: LayerOff {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Layer Off";
            toggle-mode = "off";
        };

        MMkpDQTkpGRAVE: ModMorphkpDQTkpGRAVE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kpDQT &kpGRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        MMkpEQUALkpEQUAL: ModMorphkpEQUALkpEQUAL {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kpEQUAL &kpEQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        MMkpMINUSkpPLUS: ModMorphkpMINUSkpPLUS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kpMINUS &kpPLUS>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        MMtoMOVERkpUNDER: ModMorphtoMOVERkpUNDER {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&toMOVER &kpUNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        XdgConfigKp: XdgConfigKepPress {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&XdgConfig &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <350>;
        };

        htCodeBlockbquotes: HoldTapCodeBlockbquotes {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&CodeBlock &bquotes>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        kpkp: KeyPressKepPress {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&TapNoRepeat &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        mMMkpMINUSkpPLUS: ModMMkpMINUSkpPLUS {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &MMkpMINUSkpPLUS>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        moMMtoMOVERkpUNDER: MomMMtoMOVERkpUNDER {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &MMtoMOVERkpUNDER>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        moto: MomentaryTo {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &to>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        rmt: RightModTap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &kp>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 19 20 21 39 40 41>;
            hold-trigger-on-release;
            quick-tap-ms = <200>;
            tapping-term-ms = <250>;
        };
    };

    macros {

        CodeBlock: CodeBlock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpGRAVE &kpGRAVE &kpGRAVE &kpGRAVE &kpLEFT &kpGRAVE &kpLEFT &kpGRAVE &kpLEFT>;
        };

        GoIfError: GoIfError {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpG &kpO &kpSPACE &kpI &kpF &kpE &kpLEFT &kpN &kpLEFT &kpI &kpLEFT &kpF &kpLEFT>;
        };

        OffReRet: OffReRet {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&LayerOffPARENS &macro_press &ReRet &macro_pause_for_release &macro_release &ReRet>;
        };

        Offbspcdel: Offbspcdel {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&LayerOffPARENS &macro_press &bspcdel &macro_pause_for_release &macro_release &bspcdel>;
        };

        OffmotoNUMERMOVER: OffmotoNUMERMOVER {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&LayerOffPARENS &macro_press &motoNUMER MOVER &macro_pause_for_release &macro_release &motoNUMER MOVER>;
        };

        OffmtLSHIFTRIGHT: OffmtLSHIFTRIGHT {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&LayerOffPARENS &macro_press &mtLSHIFT RIGHT &macro_pause_for_release &macro_release &mtLSHIFT RIGHT>;
        };

        ReRet: ReRet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpRET &kpUP &kpEND &kpRET>;
        };

        TapNoRepeat: TapNoRepeat {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kpMACRO_PLACEHOLDER &macro_pause_for_release>;
        };

        Wmoto: Wrapmoto {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_press &macro_param_1to1 &macro_param_2to2 &motoMACRO_PLACEHOLDER MACRO_PLACEHOLDER &macro_pause_for_release &macro_release &macro_param_1to1 &macro_param_2to2 &motoMACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        XdgConfig: XdgConfig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpDQT &kpDOLLAR &kpLS(H) &kpLS(O) &kpLS(M) &kpLS(E) &kpSLASH &kpDOT &kpC &kpO &kpN &kpF &kpI &kpG &kpDQT &kpSLASH>;
        };

        bquotes: OpenClose_bquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpGRAVE &kpGRAVE &kpLEFT &toPARENS>;
        };

        brackets: OpenClose_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpLBKT &kpRBKT &kpLEFT &toPARENS>;
        };

        bspcdel: BackspaceDelete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpDEL &kpBSPC>;
        };

        curlies: OpenClose_curlies {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpLBRC &kpRBRC &kpLEFT &toPARENS>;
        };

        dquotes: OpenClose_dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpDQT &kpDQT &kpLEFT &toPARENS>;
        };

        off1l11: OffMOVERL11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpTAB &macro_pause_for_release &macro_release &kpTAB>;
        };

        off1l12: OffMOVERL12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpQ &macro_pause_for_release &macro_release &kpQ>;
        };

        off1l13: OffMOVERL13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpW &macro_pause_for_release &macro_release &kpW>;
        };

        off1l14: OffMOVERL14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpE &macro_pause_for_release &macro_release &kpE>;
        };

        off1l15: OffMOVERL15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpR &macro_pause_for_release &macro_release &kpR>;
        };

        off1l16: OffMOVERL16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpkpRG(T) T &macro_pause_for_release &macro_release &kpkpRG(T) T>;
        };

        off1l21: OffMOVERL21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLSHIFT BACKSPACE &macro_pause_for_release &macro_release &mtLSHIFT BACKSPACE>;
        };

        off1l22: OffMOVERL22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpA &macro_pause_for_release &macro_release &kpA>;
        };

        off1l23: OffMOVERL23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLSHIFT S &macro_pause_for_release &macro_release &mtLSHIFT S>;
        };

        off1l24: OffMOVERL24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLGUI D &macro_pause_for_release &macro_release &mtLGUI D>;
        };

        off1l25: OffMOVERL25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLALT F &macro_pause_for_release &macro_release &mtLALT F>;
        };

        off1l26: OffMOVERL26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpG &macro_pause_for_release &macro_release &kpG>;
        };

        off1l31: OffMOVERL31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mMMkpMINUSkpPLUSLCTRL 0 &macro_pause_for_release &macro_release &mMMkpMINUSkpPLUSLCTRL 0>;
        };

        off1l32: OffMOVERL32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpZ &macro_pause_for_release &macro_release &kpZ>;
        };

        off1l33: OffMOVERL33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpX &macro_pause_for_release &macro_release &kpX>;
        };

        off1l34: OffMOVERL34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &XdgConfigKp0 C &macro_pause_for_release &macro_release &XdgConfigKp0 C>;
        };

        off1l35: OffMOVERL35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpV &macro_pause_for_release &macro_release &kpV>;
        };

        off1l36: OffMOVERL36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpB &macro_pause_for_release &macro_release &kpB>;
        };

        off1l41: OffMOVERL41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &motoQUICK CHAINS &macro_pause_for_release &macro_release &motoQUICK CHAINS>;
        };

        off1l42: OffMOVERL42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &moMMtoMOVERkpUNDERNUMER 0 &macro_pause_for_release &macro_release &moMMtoMOVERkpUNDERNUMER 0>;
        };

        off1l43: OffMOVERL43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLCTRL ESCAPE &macro_pause_for_release &macro_release &mtLCTRL ESCAPE>;
        };

        off1r11: OffMOVERR11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpY &macro_pause_for_release &macro_release &kpY>;
        };

        off1r12: OffMOVERR12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpU &macro_pause_for_release &macro_release &kpU>;
        };

        off1r13: OffMOVERR13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpI &macro_pause_for_release &macro_release &kpI>;
        };

        off1r14: OffMOVERR14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpO &macro_pause_for_release &macro_release &kpO>;
        };

        off1r15: OffMOVERR15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpP &macro_pause_for_release &macro_release &kpP>;
        };

        off1r16: OffMOVERR16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpLBKT &macro_pause_for_release &macro_release &kpLBKT>;
        };

        off1r21: OffMOVERR21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpH &macro_pause_for_release &macro_release &kpH>;
        };

        off1r22: OffMOVERR22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLALT J &macro_pause_for_release &macro_release &mtLALT J>;
        };

        off1r23: OffMOVERR23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLGUI K &macro_pause_for_release &macro_release &mtLGUI K>;
        };

        off1r24: OffMOVERR24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &rmtLSHIFT L &macro_pause_for_release &macro_release &rmtLSHIFT L>;
        };

        off1r25: OffMOVERR25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpkpRG(SEMI) SEMI &macro_pause_for_release &macro_release &kpkpRG(SEMI) SEMI>;
        };

        off1r26: OffMOVERR26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpkpRG(SQT) SQT &macro_pause_for_release &macro_release &kpkpRG(SQT) SQT>;
        };

        off1r31: OffMOVERR31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpN &macro_pause_for_release &macro_release &kpN>;
        };

        off1r32: OffMOVERR32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpkpRG(M) M &macro_pause_for_release &macro_release &kpkpRG(M) M>;
        };

        off1r33: OffMOVERR33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpkpRG(COMMA) COMMA &macro_pause_for_release &macro_release &kpkpRG(COMMA) COMMA>;
        };

        off1r34: OffMOVERR34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpkpRG(DOT) DOT &macro_pause_for_release &macro_release &kpkpRG(DOT) DOT>;
        };

        off1r35: OffMOVERR35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpSLASH &macro_pause_for_release &macro_release &kpSLASH>;
        };

        off1r36: OffMOVERR36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &kpBACKSLASH &macro_pause_for_release &macro_release &kpBACKSLASH>;
        };

        off1r41: OffMOVERR41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &mtLCTRL RETURN &macro_pause_for_release &macro_release &mtLCTRL RETURN>;
        };

        off1r42: OffMOVERR42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &ltNUMER SPACE &macro_pause_for_release &macro_release &ltNUMER SPACE>;
        };

        off1r43: OffMOVERR43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffMOVER &macro_press &WmotoQUICK CHAINS &macro_pause_for_release &macro_release &WmotoQUICK CHAINS>;
        };

        off5l11: OffPARENSL11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpTAB &macro_pause_for_release &macro_release &kpTAB>;
        };

        off5l12: OffPARENSL12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpQ &macro_pause_for_release &macro_release &kpQ>;
        };

        off5l13: OffPARENSL13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpW &macro_pause_for_release &macro_release &kpW>;
        };

        off5l14: OffPARENSL14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpE &macro_pause_for_release &macro_release &kpE>;
        };

        off5l15: OffPARENSL15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpR &macro_pause_for_release &macro_release &kpR>;
        };

        off5l16: OffPARENSL16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpkpRG(T) T &macro_pause_for_release &macro_release &kpkpRG(T) T>;
        };

        off5l21: OffPARENSL21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLSHIFT BACKSPACE &macro_pause_for_release &macro_release &mtLSHIFT BACKSPACE>;
        };

        off5l22: OffPARENSL22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpA &macro_pause_for_release &macro_release &kpA>;
        };

        off5l23: OffPARENSL23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLSHIFT S &macro_pause_for_release &macro_release &mtLSHIFT S>;
        };

        off5l24: OffPARENSL24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLGUI D &macro_pause_for_release &macro_release &mtLGUI D>;
        };

        off5l25: OffPARENSL25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLALT F &macro_pause_for_release &macro_release &mtLALT F>;
        };

        off5l26: OffPARENSL26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpG &macro_pause_for_release &macro_release &kpG>;
        };

        off5l31: OffPARENSL31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mMMkpMINUSkpPLUSLCTRL 0 &macro_pause_for_release &macro_release &mMMkpMINUSkpPLUSLCTRL 0>;
        };

        off5l32: OffPARENSL32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpZ &macro_pause_for_release &macro_release &kpZ>;
        };

        off5l33: OffPARENSL33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpX &macro_pause_for_release &macro_release &kpX>;
        };

        off5l34: OffPARENSL34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &XdgConfigKp0 C &macro_pause_for_release &macro_release &XdgConfigKp0 C>;
        };

        off5l35: OffPARENSL35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpV &macro_pause_for_release &macro_release &kpV>;
        };

        off5l36: OffPARENSL36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpB &macro_pause_for_release &macro_release &kpB>;
        };

        off5l41: OffPARENSL41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &motoQUICK CHAINS &macro_pause_for_release &macro_release &motoQUICK CHAINS>;
        };

        off5l42: OffPARENSL42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &moMMtoMOVERkpUNDERNUMER 0 &macro_pause_for_release &macro_release &moMMtoMOVERkpUNDERNUMER 0>;
        };

        off5l43: OffPARENSL43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLCTRL ESCAPE &macro_pause_for_release &macro_release &mtLCTRL ESCAPE>;
        };

        off5r11: OffPARENSR11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpY &macro_pause_for_release &macro_release &kpY>;
        };

        off5r12: OffPARENSR12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpU &macro_pause_for_release &macro_release &kpU>;
        };

        off5r13: OffPARENSR13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpI &macro_pause_for_release &macro_release &kpI>;
        };

        off5r14: OffPARENSR14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpO &macro_pause_for_release &macro_release &kpO>;
        };

        off5r15: OffPARENSR15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpP &macro_pause_for_release &macro_release &kpP>;
        };

        off5r16: OffPARENSR16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpLBKT &macro_pause_for_release &macro_release &kpLBKT>;
        };

        off5r21: OffPARENSR21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpH &macro_pause_for_release &macro_release &kpH>;
        };

        off5r22: OffPARENSR22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLALT J &macro_pause_for_release &macro_release &mtLALT J>;
        };

        off5r23: OffPARENSR23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLGUI K &macro_pause_for_release &macro_release &mtLGUI K>;
        };

        off5r24: OffPARENSR24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &rmtLSHIFT L &macro_pause_for_release &macro_release &rmtLSHIFT L>;
        };

        off5r25: OffPARENSR25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpkpRG(SEMI) SEMI &macro_pause_for_release &macro_release &kpkpRG(SEMI) SEMI>;
        };

        off5r26: OffPARENSR26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpkpRG(SQT) SQT &macro_pause_for_release &macro_release &kpkpRG(SQT) SQT>;
        };

        off5r31: OffPARENSR31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpN &macro_pause_for_release &macro_release &kpN>;
        };

        off5r32: OffPARENSR32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpkpRG(M) M &macro_pause_for_release &macro_release &kpkpRG(M) M>;
        };

        off5r33: OffPARENSR33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpkpRG(COMMA) COMMA &macro_pause_for_release &macro_release &kpkpRG(COMMA) COMMA>;
        };

        off5r34: OffPARENSR34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpkpRG(DOT) DOT &macro_pause_for_release &macro_release &kpkpRG(DOT) DOT>;
        };

        off5r35: OffPARENSR35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpSLASH &macro_pause_for_release &macro_release &kpSLASH>;
        };

        off5r36: OffPARENSR36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &kpBACKSLASH &macro_pause_for_release &macro_release &kpBACKSLASH>;
        };

        off5r41: OffPARENSR41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &mtLCTRL RETURN &macro_pause_for_release &macro_release &mtLCTRL RETURN>;
        };

        off5r42: OffPARENSR42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &ltNUMER SPACE &macro_pause_for_release &macro_release &ltNUMER SPACE>;
        };

        off5r43: OffPARENSR43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&LayerOffPARENS &macro_press &WmotoQUICK CHAINS &macro_pause_for_release &macro_release &WmotoQUICK CHAINS>;
        };

        parens: OpenClose_parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpLPAR &kpRPAR &kpLEFT &toPARENS>;
        };

        squotes: OpenClose_squotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kpSQT &kpSQT &kpLEFT &toPARENS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        System {
            bindings = <&toSYS>;
            key-positions = <4 5>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
        };

        LeftEnter {
            bindings = <&kpRETURN>;
            key-positions = <37 38>;
        };

        LeftSpace {
            bindings = <&kpSPACE>;
            key-positions = <36 37>;
        };

        RightCaps {
            bindings = <&caps_word>;
            key-positions = <20 21>;
            slow-release = true;
        };

        RightHomeMods {
            bindings = <&kpLS(LA(LWIN))>;
            key-positions = <19 20 21>;
        };

        MiddleMouse {
            bindings = <&mkpMCLK>;
            key-positions = <27 28>;
            timeout-ms = <100>;
            require-prior-idle-ms = <200>;
        };

        Parens {
            bindings = <&parens>;
            key-positions = <16 19>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        Curlies {
            bindings = <&curlies>;
            key-positions = <15 20>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        Brackets {
            bindings = <&brackets>;
            key-positions = <14 21>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        DoubleQuotes {
            bindings = <&dquotes>;
            key-positions = <4 7>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        SingleQuotes {
            bindings = <&squotes>;
            key-positions = <3 8>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        BackQuotes {
            bindings = <&htCodeBlockbquotes0 0>;
            key-positions = <2 9>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kpTAB                    &kpQ  &kpW         &kpE               &kpR                        &kpkpRG(T) T     &kpY             &kpU            &kpI                  &kpO              &kpP                &kpLBKT
&mtLSHIFT BACKSPACE       &kpA  &mtLSHIFT S  &mtLGUI D          &mtLALT F                   &kpG             &kpH             &mtLALT J       &mtLGUI K             &rmtLSHIFT L      &kpkpRG(SEMI) SEMI  &kpkpRG(SQT) SQT
&mMMkpMINUSkpPLUSLCTRL 0  &kpZ  &kpX         &XdgConfigKp0 C    &kpV                        &kpB             &kpN             &kpkpRG(M) M    &kpkpRG(COMMA) COMMA  &kpkpRG(DOT) DOT  &kpSLASH            &kpBACKSLASH
                                             &motoQUICK CHAINS  &moMMtoMOVERkpUNDERNUMER 0  &mtLCTRL ESCAPE  &mtLCTRL RETURN  &ltNUMER SPACE  &WmotoQUICK CHAINS
            >;
        };

        MOVER {
            bindings = <
&off1l11  &off1l12  &off1l13  &off1l14  &off1l15  &off1l16  &off1r11  &off1r12      &off1r13    &off1r14         &off1r15  &off1r16
&off1l21  &off1l22  &off1l23  &off1l24  &off1l25  &off1l26  &kpLEFT   &mtLALT DOWN  &mtLGUI UP  &mtLSHIFT RIGHT  &off1r25  &off1r26
&off1l31  &off1l32  &off1l33  &off1l34  &off1l35  &off1l36  &off1r31  &off1r32      &off1r33    &off1r34         &off1r35  &off1r36
                              &off1l41  &off1l42  &toBASE   &off1r41  &off1r42      &off1r43
            >;
        };

        NUMER {
            bindings = <
&kpLS(TAB)     &trans  &trans  &trans  &trans         &kpTILDE  &kpN0              &kpN1       &kpN2              &kpN3            &trans        &kpRBKT
&kpDELETE      &trans  &trans  &trans  &trans         &trans    &MMkpEQUALkpEQUAL  &mtLALT N4  &mtLGUI N5         &mtLSHIFT N6     &kpCOLON      &MMkpDQTkpGRAVE
&mtLCTRL PLUS  &trans  &trans  &trans  &kpLS(INSERT)  &trans    &kpPLUS            &kpN7       &kpkpRG(COMMA) N8  &kpkpRG(DOT) N9  &kpLS(SLASH)  &kpPIPE
                               &trans  &kpUNDER       &trans    &trans             &trans      &trans
            >;
        };

        QUICK {
            bindings = <
&trans  &trans  &trans  &trans  &kpLG(C_VOL_UP)  &kpC_VOL_UP  &trans        &trans         &trans         &trans         &kpPSCRN  &kpLC(RBKT)
&trans  &trans  &trans  &trans  &kpLG(C_VOL_DN)  &kpC_VOL_DN  &kpHOME       &mtLALT PG_DN  &mtLGUI PG_UP  &mtLSHIFT END  &trans    &trans
&trans  &trans  &trans  &trans  &trans           &trans       &trans        &trans         &trans         &trans         &trans    &trans
                        &trans  &trans           &trans       &mtLCTRL F10  &kpF11         &kpF12
            >;
        };

        SYS {
            bindings = <
&bootloader  &toBASE      &toBASE        &toBASE      &sys_reset   &toBASE      &toBASE        &outOUT_USB  &toBASE  &toBASE  &toBASE  &toBASE
&btBT_SEL 4  &btBT_SEL 3  &btBT_SEL 2    &btBT_SEL 1  &btBT_SEL 0  &toBASE      &toBASE        &toBASE      &toBASE  &toBASE  &toBASE  &toBASE
&toBASE      &toBASE      &btBT_CLR_ALL  &btBT_CLR    &outOUT_USB  &outOUT_BLE  &btBT_CLR_ALL  &toBASE      &toBASE  &toBASE  &toBASE  &toBASE
                                         &toBASE      &toBASE      &toBASE      &toBASE        &toBASE      &toBASE
            >;
        };

        PARENS {
            bindings = <
&off5l11           &off5l12  &off5l13  &off5l14  &off5l15                  &off5l16  &off5r11         &off5r12  &off5r13  &off5r14                 &off5r15  &off5r16
&OffbspcdelPARENS  &off5l22  &off5l23  &off5l24  &off5l25                  &off5l26  &off5r21         &off5r22  &off5r23  &OffmtLSHIFTRIGHTPARENS  &off5r25  &off5r26
&off5l31           &off5l32  &off5l33  &off5l34  &off5l35                  &off5l36  &off5r31         &off5r32  &off5r33  &off5r34                 &off5r35  &off5r36
                                       &off5l41  &OffmotoNUMERMOVERPARENS  &toBASE   &OffReRetPARENS  &off5r42  &off5r43
            >;
        };

        CHAINS {
            bindings = <
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE      &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &toCHAINS_F  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE      &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
                           &toBASE  &toBASE      &toBASE  &toBASE  &toBASE  &toBASE
            >;
        };

        CHAINS_F {
            bindings = <
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE      &toBASE      &toBASE  &kpF1   &kpF2   &kpF3  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &toCHAINS_F  &toCHAINS_G  &toBASE  &kpF4   &kpF5   &kpF6  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE      &toBASE      &toBASE  &kpF7   &kpF8   &kpF9  &toBASE  &toBASE
                           &toBASE  &toBASE      &toBASE      &kpF10   &kpF11  &kpF12
            >;
        };

        CHAINS_G {
            bindings = <
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toCHAINS_GI  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE       &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE       &toBASE  &toBASE  &toBASE
                           &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
            >;
        };

        CHAINS_GI {
            bindings = <
&toBASE  &toBASE  &toBASE      &GoIfError  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toCHAINS_S  &toBASE     &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE      &toBASE     &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
                               &toBASE     &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
            >;
        };

        CHAINS_S {
            bindings = <
&toBASE  &toBASE  &toBASE  &toBASE       &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toCHAINS_SD  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE       &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
                           &toBASE       &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
            >;
        };

        CHAINS_SD {
            bindings = <
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &kpX     &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
&toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
                           &toBASE  &toBASE  &toBASE  &toBASE  &toBASE  &toBASE
            >;
        };
    };
};
