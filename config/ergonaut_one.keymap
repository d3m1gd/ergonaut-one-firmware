#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define MOVER 1
#define NUMER 2
#define QUICK 3
#define SYS 4
#define PARENS 5
#define CHAINS 6
#define CHAINS_F 7
#define CHAINS_G 8
#define CHAINS_GI 9
#define CHAINS_S 10
#define CHAINS_SD 11

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

&caps_word {
    continue-list = <UNDER BSPC DEL LEFT RIGHT UP DOWN PG_UP PG_DN>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    behaviors {

        htCodeBlockbquotes: HoldTapCodeBlockbquotes {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&CodeBlock &bquotes>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        htTapNoRepeatkp: HoldTapTapNoRepeatkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&TapNoRepeat &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        htkpKpSlMOVER2000: HoldTapkpKpSlMOVER2000 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &KpSlMOVER2000>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        htkpcaps_word: HoldTapkpcaps_word {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &caps_word>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        htkpto: HoldTapkpto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &to>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        mkpmmkpMINUSkpPLUS: ModkpmmkpMINUSkpPLUS {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &mmkpMINUSkpPLUS>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        mmkpDQTkpGRAVE: ModMorphkpDQTkpGRAVE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mmkpEQUALkpEQUAL: ModMorphkpEQUALkpEQUAL {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mmkpMINUSkpPLUS: ModMorphkpMINUSkpPLUS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp PLUS>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        mmsllmoMOVERkpUNDER: ModMorphsllmoMOVERkpUNDER {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sllmo MOVER &kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        momommsllmoMOVERkpUNDER: MomentarymommsllmoMOVERkpUNDER {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &mmsllmoMOVERkpUNDER>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        motomoto: MomentaryTomoto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &to>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        off: Off {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Layer Off";
            toggle-mode = "off";
        };

        rmtkpkp: RightModTapkpkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &kp>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 19 20 21 39 40 41>;
            hold-trigger-on-release;
            quick-tap-ms = <200>;
            tapping-term-ms = <250>;
        };

        sll2000mo: StickyLayer2000mo {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            quick-release;
            release-after-ms = <2000>;
        };

        sllmo: StickyLayerLongmo {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&mo>;
            quick-release;
            release-after-ms = <2000>;
        };

        xkpXdgConfigkp: XKeyPressXdgConfigkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&XdgConfig &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <350>;
        };
    };

    macros {

        CodeBlock: CodeBlock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp GRAVE &kp LEFT &kp GRAVE &kp LEFT>;
        };

        GoIfError: GoIfError {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp O &kp SPACE &kp I &kp F &kp E &kp LEFT &kp N &kp LEFT &kp I &kp LEFT &kp F &kp LEFT>;
        };

        KpSlMOVER2000: KpSlMOVER2000 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &sll2000mo MOVER>;
        };

        OffGoIfError: OffGoIfError {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &GoIfError &macro_pause_for_release &macro_release &GoIfError &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        OffKey: OffKey {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_press &macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_pause_for_release &macro_release &macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        OffReRet: OffReRet {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &ReRet &macro_pause_for_release &macro_release &ReRet &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        Offbspcdel: Offbspcdel {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &bspcdel &macro_pause_for_release &macro_release &bspcdel &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        OffmotomotoNUMERMOVER: OffmotomotoNUMERMOVER {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &motomoto NUMER MOVER &macro_pause_for_release &macro_release &motomoto NUMER MOVER &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        OffmtLSHIFTRIGHT: OffmtLSHIFTRIGHT {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LSHIFT RIGHT &macro_pause_for_release &macro_release &mt LSHIFT RIGHT &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        ReRet: ReRet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RET &kp UP &kp END &kp RET>;
        };

        TapNoRepeat: TapNoRepeat {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_pause_for_release>;
        };

        XdgConfig: XdgConfig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DOLLAR &kp LS(H) &kp LS(O) &kp LS(M) &kp LS(E) &kp SLASH &kp DOT &kp C &kp O &kp N &kp F &kp I &kp G &kp DQT &kp SLASH>;
        };

        bquotes: OpenClose_bquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT &sllmo MOVER>;
        };

        brackets: OpenClose_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT &sllmo MOVER>;
        };

        bspcdel: BackspaceDelete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DEL &kp BSPC>;
        };

        curlies: OpenClose_curlies {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT &sllmo MOVER>;
        };

        dquotes: OpenClose_dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT &sllmo MOVER>;
        };

        offl11: OffL11 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp TAB &macro_pause_for_release &macro_release &kp TAB &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl12: OffL12 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp Q &macro_pause_for_release &macro_release &kp Q &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl13: OffL13 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp W &macro_pause_for_release &macro_release &kp W &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl14: OffL14 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp E &macro_pause_for_release &macro_release &kp E &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl15: OffL15 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp R &macro_pause_for_release &macro_release &kp R &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl16: OffL16 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &htTapNoRepeatkp RG(T) T &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(T) T &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl21: OffL21 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LSHIFT BACKSPACE &macro_pause_for_release &macro_release &mt LSHIFT BACKSPACE &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl22: OffL22 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp A &macro_pause_for_release &macro_release &kp A &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl23: OffL23 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LSHIFT S &macro_pause_for_release &macro_release &mt LSHIFT S &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl24: OffL24 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LGUI D &macro_pause_for_release &macro_release &mt LGUI D &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl25: OffL25 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LALT F &macro_pause_for_release &macro_release &mt LALT F &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl26: OffL26 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp G &macro_pause_for_release &macro_release &kp G &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl31: OffL31 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mkpmmkpMINUSkpPLUS LCTRL 0 &macro_pause_for_release &macro_release &mkpmmkpMINUSkpPLUS LCTRL 0 &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl32: OffL32 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp Z &macro_pause_for_release &macro_release &kp Z &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl33: OffL33 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp X &macro_pause_for_release &macro_release &kp X &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl34: OffL34 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &xkpXdgConfigkp 0 C &macro_pause_for_release &macro_release &xkpXdgConfigkp 0 C &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl35: OffL35 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp V &macro_pause_for_release &macro_release &kp V &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl36: OffL36 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp B &macro_pause_for_release &macro_release &kp B &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl41: OffL41 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &motomoto QUICK CHAINS &macro_pause_for_release &macro_release &motomoto QUICK CHAINS &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl42: OffL42 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &momommsllmoMOVERkpUNDER NUMER 0 &macro_pause_for_release &macro_release &momommsllmoMOVERkpUNDER NUMER 0 &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offl43: OffL43 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LCTRL ESCAPE &macro_pause_for_release &macro_release &mt LCTRL ESCAPE &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr11: OffR11 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp Y &macro_pause_for_release &macro_release &kp Y &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr12: OffR12 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp U &macro_pause_for_release &macro_release &kp U &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr13: OffR13 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp I &macro_pause_for_release &macro_release &kp I &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr14: OffR14 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp O &macro_pause_for_release &macro_release &kp O &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr15: OffR15 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp P &macro_pause_for_release &macro_release &kp P &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr16: OffR16 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp LBKT &macro_pause_for_release &macro_release &kp LBKT &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr21: OffR21 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp H &macro_pause_for_release &macro_release &kp H &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr22: OffR22 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LALT J &macro_pause_for_release &macro_release &mt LALT J &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr23: OffR23 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LGUI K &macro_pause_for_release &macro_release &mt LGUI K &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr24: OffR24 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &rmtkpkp LSHIFT L &macro_pause_for_release &macro_release &rmtkpkp LSHIFT L &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr25: OffR25 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &htTapNoRepeatkp RG(SEMI) SEMI &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(SEMI) SEMI &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr26: OffR26 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &htTapNoRepeatkp RG(SQT) SQT &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(SQT) SQT &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr31: OffR31 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp N &macro_pause_for_release &macro_release &kp N &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr32: OffR32 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &htTapNoRepeatkp RG(M) M &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(M) M &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr33: OffR33 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &htTapNoRepeatkp RG(COMMA) COMMA &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(COMMA) COMMA &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr34: OffR34 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &htTapNoRepeatkp RG(DOT) DOT &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(DOT) DOT &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr35: OffR35 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp SLASH &macro_pause_for_release &macro_release &kp SLASH &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr36: OffR36 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &kp BACKSLASH &macro_pause_for_release &macro_release &kp BACKSLASH &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr41: OffR41 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LCTRL RETURN &macro_pause_for_release &macro_release &mt LCTRL RETURN &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr42: OffR42 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &lt NUMER SPACE &macro_pause_for_release &macro_release &lt NUMER SPACE &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        offr43: OffR43 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &motomoto QUICK CHAINS &macro_pause_for_release &macro_release &motomoto QUICK CHAINS &macro_tap &macro_param_1to1 &off MACRO_PLACEHOLDER>;
        };

        parens: OpenClose_parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT &sllmo MOVER>;
        };

        squotes: OpenClose_squotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT &sllmo MOVER>;
        };
    };

    combos {
        compatible = "zmk,combos";

        System {
            bindings = <&to SYS>;
            key-positions = <4 5>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
        };

        LeftEnter {
            bindings = <&kp RETURN>;
            key-positions = <37 38>;
        };

        LeftSpace {
            bindings = <&kp SPACE>;
            key-positions = <36 37>;
        };

        RightAltWinShift {
            bindings = <&kp LA(LG(LSHIFT))>;
            key-positions = <19 20 21>;
        };

        RightAltWin {
            bindings = <&htkpto LA(LWIN) MOVER>;
            key-positions = <19 20>;
        };

        RightWinShift_Caps {
            bindings = <&htkpcaps_word LG(LSHIFT) 0>;
            key-positions = <20 21>;
        };

        MiddleMouse {
            bindings = <&mkp MCLK>;
            key-positions = <27 28>;
            timeout-ms = <100>;
            require-prior-idle-ms = <200>;
        };

        Parens {
            bindings = <&parens>;
            key-positions = <16 19>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
        };

        Curlies {
            bindings = <&curlies>;
            key-positions = <15 20>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
        };

        Brackets {
            bindings = <&brackets>;
            key-positions = <14 21>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
        };

        DoubleQuotes {
            bindings = <&dquotes>;
            key-positions = <4 7>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
        };

        SingleQuotes {
            bindings = <&squotes>;
            key-positions = <3 8>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
        };

        BackQuotes {
            bindings = <&htCodeBlockbquotes 0 0>;
            key-positions = <2 9>;
            timeout-ms = <40>;
            require-prior-idle-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB                      &kp Q  &kp W         &kp E                   &kp R                             &htTapNoRepeatkp RG(T) T  &kp Y             &kp U                     &kp I                             &kp O                         &kp P                           &kp LBKT
&mt LSHIFT BACKSPACE         &kp A  &mt LSHIFT S  &mt LGUI D              &mt LALT F                        &kp G                     &kp H             &mt LALT J                &mt LGUI K                        &rmtkpkp LSHIFT L             &htTapNoRepeatkp RG(SEMI) SEMI  &htTapNoRepeatkp RG(SQT) SQT
&mkpmmkpMINUSkpPLUS LCTRL 0  &kp Z  &kp X         &xkpXdgConfigkp 0 C     &kp V                             &kp B                     &kp N             &htTapNoRepeatkp RG(M) M  &htTapNoRepeatkp RG(COMMA) COMMA  &htTapNoRepeatkp RG(DOT) DOT  &kp SLASH                       &kp BACKSLASH
                                                  &motomoto QUICK CHAINS  &momommsllmoMOVERkpUNDER NUMER 0  &mt LCTRL ESCAPE          &mt LCTRL RETURN  &lt NUMER SPACE           &motomoto QUICK CHAINS
            >;
        };

        MOVER {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans               &trans                        &trans                      &trans                           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &KpSlMOVER2000 LEFT  &htkpKpSlMOVER2000 LALT DOWN  &htkpKpSlMOVER2000 LGUI UP  &htkpKpSlMOVER2000 LSHIFT RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans               &trans                        &trans                      &trans                           &trans  &trans
                        &trans  &trans  &to BASE  &trans               &trans                        &trans
            >;
        };

        NUMER {
            bindings = <
&kp LS(TAB)     &trans  &trans  &trans  &trans          &kp TILDE  &kp N0             &kp N1       &kp N2                         &kp N3                       &trans         &kp RBKT
&kp DELETE      &trans  &trans  &trans  &trans          &trans     &mmkpEQUALkpEQUAL  &mt LALT N4  &mt LGUI N5                    &mt LSHIFT N6                &kp COLON      &mmkpDQTkpGRAVE
&mt LCTRL PLUS  &trans  &trans  &trans  &kp LS(INSERT)  &trans     &kp PLUS           &kp N7       &htTapNoRepeatkp RG(COMMA) N8  &htTapNoRepeatkp RG(DOT) N9  &kp LS(SLASH)  &kp PIPE
                                &trans  &kp UNDER       &trans     &trans             &trans       &trans
            >;
        };

        QUICK {
            bindings = <
&trans  &trans  &trans  &trans  &kp LG(C_VOL_UP)  &kp C_VOL_UP  &trans         &trans          &trans          &trans          &kp PSCRN  &kp LC(RBKT)
&trans  &trans  &trans  &trans  &kp LG(C_VOL_DN)  &kp C_VOL_DN  &kp HOME       &mt LALT PG_DN  &mt LGUI PG_UP  &mt LSHIFT END  &trans     &trans
&trans  &trans  &trans  &trans  &trans            &trans        &trans         &trans          &trans          &trans          &trans     &trans
                        &trans  &trans            &trans        &mt LCTRL F10  &kp F11         &kp F12
            >;
        };

        SYS {
            bindings = <
&bootloader   &to BASE      &to BASE        &to BASE      &sys_reset    &to BASE      &to BASE        &out OUT_USB  &to BASE  &to BASE  &to BASE  &to BASE
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2    &bt BT_SEL 1  &bt BT_SEL 0  &to BASE      &to BASE        &to BASE      &to BASE  &to BASE  &to BASE  &to BASE
&to BASE      &to BASE      &bt BT_CLR_ALL  &bt BT_CLR    &out OUT_USB  &out OUT_BLE  &bt BT_CLR_ALL  &to BASE      &to BASE  &to BASE  &to BASE  &to BASE
                                            &to BASE      &to BASE      &to BASE      &to BASE        &to BASE      &to BASE
            >;
        };

        PARENS {
            bindings = <
&offl11 PARENS      &offl12 PARENS  &offl13 PARENS  &offl14 PARENS  &offl15 PARENS                 &offl16 PARENS  &offr11 PARENS    &offr12 PARENS  &offr13 PARENS  &offr14 PARENS            &offr15 PARENS  &offr16 PARENS
&Offbspcdel PARENS  &offl22 PARENS  &offl23 PARENS  &offl24 PARENS  &offl25 PARENS                 &offl26 PARENS  &offr21 PARENS    &offr22 PARENS  &offr23 PARENS  &OffmtLSHIFTRIGHT PARENS  &offr25 PARENS  &offr26 PARENS
&offl31 PARENS      &offl32 PARENS  &offl33 PARENS  &offl34 PARENS  &offl35 PARENS                 &offl36 PARENS  &offr31 PARENS    &offr32 PARENS  &offr33 PARENS  &offr34 PARENS            &offr35 PARENS  &offr36 PARENS
                                                    &offl41 PARENS  &OffmotomotoNUMERMOVER PARENS  &to BASE        &OffReRet PARENS  &offr42 PARENS  &offr43 PARENS
            >;
        };

        CHAINS {
            bindings = <
&to BASE  &to BASE  &to BASE      &to BASE  &to BASE      &to BASE      &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to CHAINS_S  &to BASE  &to CHAINS_F  &to CHAINS_G  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE      &to BASE  &to BASE      &to BASE      &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                                  &to BASE  &to BASE      &to BASE      &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_F {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE              &OffKey CHAINS_F F1   &OffKey CHAINS_F F2   &OffKey CHAINS_F F3  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE              &OffKey CHAINS_F F4   &OffKey CHAINS_F F5   &OffKey CHAINS_F F6  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE              &OffKey CHAINS_F F7   &OffKey CHAINS_F F8   &OffKey CHAINS_F F9  &to BASE  &to BASE
                              &to BASE  &to BASE  &to BASE  &OffKey CHAINS_F F10  &OffKey CHAINS_F F11  &OffKey CHAINS_F F12
            >;
        };

        CHAINS_G {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to CHAINS_GI  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE
                              &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_GI {
            bindings = <
&to BASE  &to BASE  &to BASE  &OffGoIfError CHAINS_GI  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE                 &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE                 &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE                 &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_S {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to CHAINS_SD  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_SD {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE             &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &OffKey CHAINS_SD X  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE             &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE  &to BASE             &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };
    };
};
