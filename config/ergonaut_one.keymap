#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define MOVE 1
#define NUM 2
#define QUICK 3
#define REPEAT 4
#define SYS 5
#define PARENS 6
#define CHAINS 7

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE LEFT_ARROW RIGHT_ARROW UP_ARROW DOWN_ARROW PAGE_UP PAGE_DOWN>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        rmt: rmt {
            compatible = "zmk,behavior-hold-tap";
            label = "Right Mod Tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        kpkp: kpkp {
            compatible = "zmk,behavior-hold-tap";
            label = "kpkp";
            bindings = <&tapNoRepeat>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };

        sls: sls {
            compatible = "zmk,behavior-sticky-key";
            label = "Short Sticky Layer";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <500>;
            quick-release;
        };

        sll: sll {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky Layer Long";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
            quick-release;
        };

        skl: skl {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky Key Long";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <1500>;
            ignore-modifiers;
            quick-release;
        };

        kpConfig: kpConfig {
            compatible = "zmk,behavior-hold-tap";
            label = "Key Config macro";
            bindings = <&envConfig>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        slxs: slxs {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky Layer Extra Short";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <200>;
            quick-release;
        };

        ll: ll {
            compatible = "zmk,behavior-hold-tap";
            label = "Layer Layer";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            bindings = <&mo>, <&sll>;
        };

        slxl: slxl {
            compatible = "zmk,behavior-sticky-key";
            label = "Sticky Layer Extra Long";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <10000>;
            quick-release;
            ignore-modifiers;
        };

        mtCurly: mtCurly {
            compatible = "zmk,behavior-hold-tap";
            label = "MTCURLY";
            bindings = <&kp>, <&curlyFull>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        mtBracket: mtBracket {
            compatible = "zmk,behavior-hold-tap";
            label = "MTBRACKET";
            bindings = <&kp>, <&bracketFull>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        mtParen: mtParen {
            compatible = "zmk,behavior-hold-tap";
            label = "MTPAREN";
            bindings = <&kp>, <&parenFull>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        mmEquals: mmEquals {
            compatible = "zmk,behavior-mod-morph";
            label = "MMEQUALS";
            bindings = <&kp EQUAL>, <&kp EQUAL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mmQuoteGrave: mmQuoteGrave {
            compatible = "zmk,behavior-mod-morph";
            label = "MMQUOTEGRAVE";
            bindings = <&kp DOUBLE_QUOTES>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lslxl: lslxl {
            compatible = "zmk,behavior-hold-tap";
            label = "LSLXL";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            bindings = <&mo>, <&slxl>;
        };

        mmMoveUnder: mmMoveUnder {
            compatible = "zmk,behavior-mod-morph";
            label = "mm Move Under";
            bindings = <&to MOVE>, <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        lmmNumMoveUnder: lmmNumMoveUnder {
            compatible = "zmk,behavior-hold-tap";
            label = "LMMNUMMOVEUNDER";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            bindings = <&mo>, <&mmMoveUnder>;
        };

        rmt1sls: rmt1sls {
            compatible = "zmk,behavior-hold-tap";
            label = "ModTap StickyLayer S";
            bindings = <&kp>, <&t1sls>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            quick-tap-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    macros {
        sksls: slmod {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &skl MACRO_PLACEHOLDER &macro_param_2to1 &sls MACRO_PLACEHOLDER>;
            label = "SLMOD";
        };

        tapNoRepeat: tnr {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>;

            label = "Tap No Repeat";
        };

        tsls: tsls {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &sls MACRO_PLACEHOLDER>;
            label = "Tap and Sticky Layer Short";
        };

        tsl: tsl {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &sl MACRO_PLACEHOLDER>;
            label = "Tap and Sticky Layer";
        };

        kpsll: kpsll {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &sll MACRO_PLACEHOLDER>;
            label = "KPSLL";
        };

        envConfig: homeconfig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DLLR &kp LS(H) &kp LS(O) &kp LS(M) &kp LS(E) &kp DQT &kp FSLH &kp DOT &kp C &kp O &kp N &kp F &kp I &kp G &kp FSLH>;
            label = "HOMECONFIG";
        };

        t1sl: kprsl {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &sl MACRO_PLACEHOLDER>;

            label = "KeyPress Repeat StickyLayer";
        };

        t1sls: kprsls {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &sls MACRO_PLACEHOLDER>;

            label = "KPRSLS";
        };

        tslxs: tslxs {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &slxs MACRO_PLACEHOLDER>;
            label = "Tap and Sticky Layer Extra Short";
        };

        null1: null1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp FSLH &kp D &kp E &kp V &kp FSLH &kp N &kp U &kp L &kp L &kp SPACE>;
            label = "DevNull1";
        };

        nullX: nullX {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp GT &kp FSLH &kp D &kp E &kp V &kp FSLH &kp N &kp U &kp L &kp L &kp SPACE>;
            label = "DevNullX";
        };

        nullAll: nullAll {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&null1 &redir N2 N1>;
            label = "DevNull All";
        };

        quoted: quoted {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT_ARROW &sll 6>;
            label = "QUOTED";
        };

        varred: varred {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR &kp LEFT_BRACE &kp RBRC &kp LEFT_ARROW>;
            label = "VARRED";
        };

        goeq: goequals {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL>;
            label = "GOEQUALS";
        };

        quoteds: quoteds {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SINGLE_QUOTE &kp LEFT_ARROW>;
            label = "QUOTEDS";
        };

        quotedb: quotedb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT_ARROW>;
            label = "QUOTEDB";
        };

        rsls: rsls {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&key_repeat &macro_param_1to1 &sls MACRO_PLACEHOLDER>;
            label = "Repeat and Sticky Layer Short";
        };

        goIfError: goIfError {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp F &kp SPACE &kp E &kp R &kp R &kp SPACE &kp EXCL &kp EQUAL &kp SPACE &kp N &kp I &kp L &kp SPACE &kp LEFT_BRACE &kp SPACE &kp R &kp E &kp T &kp U &kp R &kp N &kp SPACE &kp E &kp R &kp R &kp SEMI &kp SPACE &kp RBRC>;
            label = "GOIFERROR";
        };

        curlyFull: curlyFull {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC &kp LEFT &sll 6>;
            label = "CURLYFULL";
        };

        bracketFull: bracketFull {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT &sll 6>;
            label = "BRACKETFULL";
        };

        parenFull: parenFull {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT &sll 6>;
            label = "PARENFULL";
        };

        mdCode: mdCode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT &kp LS(RETURN) &kp LS(RETURN) &kp UP>;
            label = "MDCODE";
        };

        envQuoted: envQuoted {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DLLR &kp DQT &kp LEFT>;
            label = "ENVQUOTED";
        };

        envCurlyQuoted: envCurly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DLLR &kp LEFT_BRACE &kp RBRC &kp DQT &kp LEFT &kp LEFT>;
            label = "ENVCURLY";
        };

        splitParens: splitParens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RETURN) &kp UP &kp END &kp LS(RETURN)>;
            label = "SPLITPARENS";
        };

        redir: redir {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp GT &kp AMPS &macro_param_2to1 &kp MACRO_PLACEHOLDER &kp SPACE>;
            label = "REDIR";
        };

        to0l11: to0l11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp TAB>;
            label = "To 0, L11";
        };

        to0l12: to0l12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp Q>;
            label = "To 0, L12";
        };

        to0l13: to0l13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp W>;
            label = "To 0, L13";
        };

        to0l14: to0l14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp E>;
            label = "To 0, L14";
        };

        to0l15: to0l15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp R>;
            label = "To 0, L15";
        };

        to0l16: to0l16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kpkp RG(T) T>;
            label = "To 0, L16";
        };

        to0r11: to0r11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp Y>;
            label = "To 0, R11";
        };

        to0r12: to0r12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp U>;
            label = "To 0, R12";
        };

        to0r13: to0r13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp I>;
            label = "To 0, R13";
        };

        to0r14: to0r14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp O>;
            label = "To 0, R14";
        };

        to0r15: to0r15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp P>;
            label = "To 0, R15";
        };

        to0r16: to0r16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp LBKT>;
            label = "To 0, R16";
        };

        to0l21: to0l21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &mt LSHIFT BACKSPACE>;
            label = "To 0, L21";
        };

        to0l22: to0l22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp A>;
            label = "To 0, L22";
        };

        to0l23: to0l23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &mt LSHIFT S>;
            label = "To 0, L23";
        };

        to0l24: to0l24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &mt LGUI D>;
            label = "To 0, L24";
        };

        to0l25: to0l25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &mt LALT F>;
            label = "To 0, L25";
        };

        to0l26: to0l26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp G>;
            label = "To 0, L26";
        };

        to0r21: to0r21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp H>;
            label = "To 0, R21";
        };

        to0r22: to0r22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &rmt LALT J>;
            label = "To 0, R22";
        };

        to0r23: to0r23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &rmt LGUI K>;
            label = "To 0, R23";
        };

        to0r24: to0r24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &rmt LSHIFT L>;
            label = "To 0, R24";
        };

        to0r25: to0r25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kpkp RG(SEMI) SEMI>;
            label = "To 0, R25";
        };

        to0r26: to0r26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kpkp RG(SQT) SQT>;
            label = "To 0, R26";
        };

        to0l31: to0l31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &mt LCTRL MINUS>;
            label = "To 0, L31";
        };

        to0l32: to0l32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp Z>;
            label = "To 0, L32";
        };

        to0l33: to0l33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp X>;
            label = "To 0, L33";
        };

        to0l34: to0l34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kpConfig 0 C>;
            label = "To 0, L34";
        };

        to0l35: to0l35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp V>;
            label = "To 0, L35";
        };

        to0l36: to0l36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp B>;
            label = "To 0, L36";
        };

        to0r31: to0r31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp N>;
            label = "To 0, R31";
        };

        to0r32: to0r32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kpkp RG(M) M>;
            label = "To 0, R32";
        };

        to0r33: to0r33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kpkp RG(COMMA) COMMA>;
            label = "To 0, R33";
        };

        to0r34: to0r34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kpkp RG(DOT) DOT>;
            label = "To 0, R34";
        };

        to0r35: to0r35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp SLASH>;
            label = "To 0, R35";
        };

        to0r36: to0r36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &kp BACKSLASH>;
            label = "To 0, R36";
        };

        to0l41: to0l41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &lslxl QUICK CHAINS>;
            label = "To 0, L41";
        };

        to0l42: to0l42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &lmmNumMoveUnder NUM 0>;
            label = "To 0, L42";
        };

        to0l43: to0l43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &mt LCTRL ESCAPE>;
            label = "To 0, L43";
        };

        to0r41: to0r41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &mt LCTRL RETURN>;
            label = "To 0, R41";
        };

        to0r42: to0r42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &lt NUM SPACE>;
            label = "To 0, R42";
        };

        to0r43: to0r43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &slxl CHAINS>;
            label = "To 0, R43";
        };
    };

    combos {
        compatible = "zmk,combos";

        LAM {
            bindings = <&skl LA(LEFT_GUI)>;
            key-positions = <15 16>;
            layers = <0>;
        };

        LCM {
            bindings = <&skl LC(LEFT_GUI)>;
            key-positions = <15 38>;
            layers = <0>;
        };

        LSM {
            bindings = <&skl LS(LEFT_GUI)>;
            key-positions = <15 14>;
            layers = <0>;
        };

        LCS {
            bindings = <&skl LS(LEFT_CONTROL)>;
            key-positions = <14 38>;
            layers = <0>;
        };

        LAS {
            bindings = <&skl LS(LEFT_ALT)>;
            key-positions = <14 16>;
            layers = <0>;
        };

        LAC {
            bindings = <&skl LA(LEFT_CONTROL)>;
            key-positions = <16 38>;
            layers = <0>;
        };

        LACM {
            bindings = <&skl LA(LG(LEFT_CONTROL))>;
            key-positions = <16 15 38>;
            layers = <0>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
        };

        LASM {
            bindings = <&skl LA(LS(LEFT_GUI))>;
            key-positions = <14 15 16>;
            layers = <0>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
        };

        LACS {
            bindings = <&skl LA(LS(LEFT_CONTROL))>;
            key-positions = <14 16 38>;
            layers = <0>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
        };

        sys {
            bindings = <&sll 5>;
            key-positions = <4 5>;
            layers = <0>;
            require-prior-idle-ms = <500>;
        };

        lenter {
            bindings = <&kp RETURN>;
            key-positions = <37 38>;
            layers = <0>;
        };

        lspace {
            bindings = <&kp SPACE>;
            key-positions = <37 36>;
            layers = <0>;
        };

        tctrl {
            bindings = <&kt LGUI>;
            key-positions = <36 37 38>;
        };

        RCAPS {
            bindings = <&caps_word>;
            key-positions = <20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB               &kp Q  &kp W         &kp E                &kp R                   &kpkp RG(T) T     &kp Y             &kp U          &kp I                  &kp O              &kp P                &kp LBKT
&mt LSHIFT BACKSPACE  &kp A  &mt LSHIFT S  &mt LGUI D           &mt LALT F              &kp G             &kp H             &rmt LALT J    &rmt LGUI K            &rmt LSHIFT L      &kpkp RG(SEMI) SEMI  &kpkp RG(SQT) SQT
&mt LCTRL MINUS       &kp Z  &kp X         &kpConfig 0 C        &kp V                   &kp B             &kp N             &kpkp RG(M) M  &kpkp RG(COMMA) COMMA  &kpkp RG(DOT) DOT  &kp SLASH            &kp BACKSLASH
                                           &lslxl QUICK CHAINS  &lmmNumMoveUnder NUM 0  &mt LCTRL ESCAPE  &mt LCTRL RETURN  &lt NUM SPACE  &slxl CHAINS
            >;
        };

        MOVE {
            bindings = <
&to0l11  &to0l12  &to0l13  &to0l14  &to0l15  &to0l16   &to0r11   &to0r12         &to0r13       &to0r14            &to0r15  &to0r16
&to0l21  &to0l22  &to0l23  &to0l24  &to0l25  &to0l26   &kp LEFT  &rmt LALT DOWN  &rmt LGUI UP  &rmt LSHIFT RIGHT  &to0r25  &to0r26
&to0l31  &to0l32  &to0l33  &to0l34  &to0l35  &to0l36   &to0r31   &to0r32         &to0r33       &to0r34            &to0r35  &to0r36
                           &to0l41  &to0l42  &to BASE  &to0r41   &to0r42         &to0r43
            >;
        };

        NUM {
            bindings = <
&kp LS(TAB)  &trans  &trans               &trans           &trans           &kp TILDE  &kp N0     &kp N1       &kp N2              &kp N3            &trans         &kp RBKT
&kp DELETE   &trans  &mtBracket LSHIFT 0  &mtParen LGUI 0  &mtCurly LALT 0  &trans     &mmEquals  &mt LALT N4  &mt LGUI N5         &mt LSHIFT N6     &kp COLON      &mmQuoteGrave
&trans       &trans  &trans               &trans           &kp LS(INSERT)   &trans     &kp PLUS   &kp N7       &kpkp RG(COMMA) N8  &kpkp RG(DOT) N9  &kp LS(SLASH)  &kp PIPE
                                          &trans           &kp UNDERSCORE   &trans     &trans     &trans       &trans
            >;
        };

        QUICK {
            bindings = <
&trans  &trans  &trans  &trans  &kp LG(C_VOL_UP)  &kp C_VOL_UP  &trans          &trans           &trans           &trans           &kp PSCRN  &kp LC(RBKT)
&trans  &trans  &trans  &trans  &kp LG(C_VOL_DN)  &kp C_VOL_DN  &kp HOME        &rmt LALT PG_DN  &rmt LGUI PG_UP  &rmt LSHIFT END  &trans     &trans
&trans  &trans  &trans  &trans  &trans            &trans        &trans          &trans           &trans           &trans           &trans     &trans
                        &trans  &trans            &trans        &rmt LCTRL F10  &kp F11          &kp F12
            >;
        };

        REPEAT {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        SYS {
            bindings = <
&bootloader   &none         &none           &none         &sys_reset    &none         &none           &out OUT_USB  &none  &none  &none  &none
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2    &bt BT_SEL 1  &bt BT_SEL 0  &none         &none           &none         &none  &none  &none  &none
&none         &none         &bt BT_CLR_ALL  &bt BT_CLR    &out OUT_USB  &out OUT_BLE  &bt BT_CLR_ALL  &none         &none  &none  &none  &none
                                            &none         &none         &none         &none           &none         &none
            >;
        };

        PARENS {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans     &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &splitParens  &kp RIGHT  &trans
            >;
        };

        chains {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &slxl 18      &slxl 10      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &slxl 8       &slxl 11      &kp K_CANCEL  &slxl 15      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &slxl 9       &kp K_CANCEL  &slxl 17      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_S {
            bindings = <
&kp K_CANCEL  &quoteds      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_B {
            bindings = <
&kp K_CANCEL  &quotedb      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_R {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &slxl 13      &slxl 14      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &slxl 12      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_D {
            bindings = <
&kp K_CANCEL  &quoted       &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &nullAll      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_RD {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &nullAll      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_R0 {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &nullAll      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &nullAll      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_R1 {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &null1        &null1        &redir N1 N2  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &null1        &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_G {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &slxl 16      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_GI {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &goIfError    &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_M {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &mdCode       &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_E {
            bindings = <
&kp K_CANCEL  &envQuoted    &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &slxl 19      &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_EC {
            bindings = <
&kp K_CANCEL  &envCurlyQuoted  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL     &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL     &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                             &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };

        chain_empty {
            bindings = <
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
&kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
                                          &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL  &kp K_CANCEL
            >;
        };
    };
};
