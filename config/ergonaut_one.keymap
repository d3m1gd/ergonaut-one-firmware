#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define MOVER 1
#define NUMER 2
#define QUICK 3
#define SYS 4
#define PARENS 5
#define CHAINS 6
#define CHAINS_F 7
#define CHAINS_G 8
#define CHAINS_GI 9
#define CHAINS_S 10
#define CHAINS_SD 11

&lt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
};

&caps_word {
    continue-list = <UNDER BSPC DEL LEFT RIGHT UP DOWN PG_UP PG_DN>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    behaviors {

        htCodeBlockbquotes: HoldTapCodeBlockbquotes {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&CodeBlock &bquotes>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        htTapNoRepeatkp: HoldTapTapNoRepeatkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&TapNoRepeat &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        htkpcaps_word: HoldTapkpcaps_word {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &caps_word>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        htkpto: HoldTapkpto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &to>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        mkpmmkpMINUSkpPLUS: ModkpmmkpMINUSkpPLUS {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &mmkpMINUSkpPLUS>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
        };

        mmkpDQTkpGRAVE: ModMorphkpDQTkpGRAVE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mmkpEQUALkpEQUAL: ModMorphkpEQUALkpEQUAL {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mmkpMINUSkpPLUS: ModMorphkpMINUSkpPLUS {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp PLUS>;
            keep-mods = <(MOD_LCTL|MOD_RCTL)>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL)>;
        };

        mmtoCHAINSkpUNDER: ModMorphtoCHAINSkpUNDER {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&to CHAINS &kp UNDER>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        momommtoCHAINSkpUNDER: MomentarymommtoCHAINSkpUNDER {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &mmtoCHAINSkpUNDER>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        motomoto: MomentaryTomoto {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo &to>;
            flavor = "balanced";
            tapping-term-ms = <300>;
        };

        offtog: Offtog {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            bindings = <&tog>;
            display-name = "Layer Off";
            toggle-mode = "off";
        };

        rmtkpkp: RightModTapkpkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp &kp>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 19 20 21 39 40 41>;
            hold-trigger-on-release;
            quick-tap-ms = <200>;
            tapping-term-ms = <250>;
        };

        xkpXdgConfigkp: XKeyPressXdgConfigkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&XdgConfig &kp>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <350>;
        };
    };

    macros {

        CodeBlock: CodeBlock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp GRAVE &kp LEFT &kp GRAVE &kp LEFT>;
        };

        GoIfError: GoIfError {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp O &kp SPACE &kp I &kp F &kp E &kp LEFT &kp N &kp LEFT &kp I &kp LEFT &kp F &kp LEFT>;
        };

        OffGoIfError: OffGoIfError {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &GoIfError &macro_pause_for_release &macro_release &GoIfError &macro_tap &macro_param_1to1 &LayerOff MACRO_PLACEHOLDER>;
        };

        OffKey: OffKey {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings = <&macro_press &macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_pause_for_release &macro_release &macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_tap &macro_param_1to1 &LayerOff MACRO_PLACEHOLDER>;
        };

        OffReRet: OffReRet {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &ReRet &macro_pause_for_release &macro_release &ReRet &macro_tap &macro_param_1to1 &LayerOff MACRO_PLACEHOLDER>;
        };

        Offbspcdel: Offbspcdel {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &bspcdel &macro_pause_for_release &macro_release &bspcdel &macro_tap &macro_param_1to1 &LayerOff MACRO_PLACEHOLDER>;
        };

        OffmotomotoNUMERMOVER: OffmotomotoNUMERMOVER {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &motomoto NUMER MOVER &macro_pause_for_release &macro_release &motomoto NUMER MOVER &macro_tap &macro_param_1to1 &LayerOff MACRO_PLACEHOLDER>;
        };

        OffmtLSHIFTRIGHT: OffmtLSHIFTRIGHT {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_press &mt LSHIFT RIGHT &macro_pause_for_release &macro_release &mt LSHIFT RIGHT &macro_tap &macro_param_1to1 &LayerOff MACRO_PLACEHOLDER>;
        };

        ReRet: ReRet {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RET &kp UP &kp END &kp RET>;
        };

        TapNoRepeat: TapNoRepeat {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_pause_for_release>;
        };

        XdgConfig: XdgConfig {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DOLLAR &kp LS(H) &kp LS(O) &kp LS(M) &kp LS(E) &kp SLASH &kp DOT &kp C &kp O &kp N &kp F &kp I &kp G &kp DQT &kp SLASH>;
        };

        bquotes: OpenClose_bquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT &to PARENS>;
        };

        brackets: OpenClose_brackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT &to PARENS>;
        };

        bspcdel: BackspaceDelete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DEL &kp BSPC>;
        };

        curlies: OpenClose_curlies {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT &to PARENS>;
        };

        dquotes: OpenClose_dquotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp LEFT &to PARENS>;
        };

        off1l11: OffMOVERL11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp TAB &macro_pause_for_release &macro_release &kp TAB &macro_tap &offtog MOVER>;
        };

        off1l12: OffMOVERL12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp Q &macro_pause_for_release &macro_release &kp Q &macro_tap &offtog MOVER>;
        };

        off1l13: OffMOVERL13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp W &macro_pause_for_release &macro_release &kp W &macro_tap &offtog MOVER>;
        };

        off1l14: OffMOVERL14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp E &macro_pause_for_release &macro_release &kp E &macro_tap &offtog MOVER>;
        };

        off1l15: OffMOVERL15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp R &macro_pause_for_release &macro_release &kp R &macro_tap &offtog MOVER>;
        };

        off1l16: OffMOVERL16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(T) T &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(T) T &macro_tap &offtog MOVER>;
        };

        off1l21: OffMOVERL21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LSHIFT BACKSPACE &macro_pause_for_release &macro_release &mt LSHIFT BACKSPACE &macro_tap &offtog MOVER>;
        };

        off1l22: OffMOVERL22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp A &macro_pause_for_release &macro_release &kp A &macro_tap &offtog MOVER>;
        };

        off1l23: OffMOVERL23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LSHIFT S &macro_pause_for_release &macro_release &mt LSHIFT S &macro_tap &offtog MOVER>;
        };

        off1l24: OffMOVERL24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LGUI D &macro_pause_for_release &macro_release &mt LGUI D &macro_tap &offtog MOVER>;
        };

        off1l25: OffMOVERL25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LALT F &macro_pause_for_release &macro_release &mt LALT F &macro_tap &offtog MOVER>;
        };

        off1l26: OffMOVERL26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp G &macro_pause_for_release &macro_release &kp G &macro_tap &offtog MOVER>;
        };

        off1l31: OffMOVERL31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mkpmmkpMINUSkpPLUS LCTRL 0 &macro_pause_for_release &macro_release &mkpmmkpMINUSkpPLUS LCTRL 0 &macro_tap &offtog MOVER>;
        };

        off1l32: OffMOVERL32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp Z &macro_pause_for_release &macro_release &kp Z &macro_tap &offtog MOVER>;
        };

        off1l33: OffMOVERL33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp X &macro_pause_for_release &macro_release &kp X &macro_tap &offtog MOVER>;
        };

        off1l34: OffMOVERL34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &xkpXdgConfigkp 0 C &macro_pause_for_release &macro_release &xkpXdgConfigkp 0 C &macro_tap &offtog MOVER>;
        };

        off1l35: OffMOVERL35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp V &macro_pause_for_release &macro_release &kp V &macro_tap &offtog MOVER>;
        };

        off1l36: OffMOVERL36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp B &macro_pause_for_release &macro_release &kp B &macro_tap &offtog MOVER>;
        };

        off1l41: OffMOVERL41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &motomoto QUICK CHAINS &macro_pause_for_release &macro_release &motomoto QUICK CHAINS &macro_tap &offtog MOVER>;
        };

        off1l42: OffMOVERL42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &momommtoCHAINSkpUNDER NUMER 0 &macro_pause_for_release &macro_release &momommtoCHAINSkpUNDER NUMER 0 &macro_tap &offtog MOVER>;
        };

        off1l43: OffMOVERL43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LCTRL ESCAPE &macro_pause_for_release &macro_release &mt LCTRL ESCAPE &macro_tap &offtog MOVER>;
        };

        off1r11: OffMOVERR11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp Y &macro_pause_for_release &macro_release &kp Y &macro_tap &offtog MOVER>;
        };

        off1r12: OffMOVERR12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp U &macro_pause_for_release &macro_release &kp U &macro_tap &offtog MOVER>;
        };

        off1r13: OffMOVERR13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp I &macro_pause_for_release &macro_release &kp I &macro_tap &offtog MOVER>;
        };

        off1r14: OffMOVERR14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp O &macro_pause_for_release &macro_release &kp O &macro_tap &offtog MOVER>;
        };

        off1r15: OffMOVERR15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp P &macro_pause_for_release &macro_release &kp P &macro_tap &offtog MOVER>;
        };

        off1r16: OffMOVERR16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LBKT &macro_pause_for_release &macro_release &kp LBKT &macro_tap &offtog MOVER>;
        };

        off1r21: OffMOVERR21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp H &macro_pause_for_release &macro_release &kp H &macro_tap &offtog MOVER>;
        };

        off1r22: OffMOVERR22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LALT J &macro_pause_for_release &macro_release &mt LALT J &macro_tap &offtog MOVER>;
        };

        off1r23: OffMOVERR23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LGUI K &macro_pause_for_release &macro_release &mt LGUI K &macro_tap &offtog MOVER>;
        };

        off1r24: OffMOVERR24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &rmtkpkp LSHIFT L &macro_pause_for_release &macro_release &rmtkpkp LSHIFT L &macro_tap &offtog MOVER>;
        };

        off1r25: OffMOVERR25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(SEMI) SEMI &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(SEMI) SEMI &macro_tap &offtog MOVER>;
        };

        off1r26: OffMOVERR26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(SQT) SQT &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(SQT) SQT &macro_tap &offtog MOVER>;
        };

        off1r31: OffMOVERR31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp N &macro_pause_for_release &macro_release &kp N &macro_tap &offtog MOVER>;
        };

        off1r32: OffMOVERR32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(M) M &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(M) M &macro_tap &offtog MOVER>;
        };

        off1r33: OffMOVERR33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(COMMA) COMMA &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(COMMA) COMMA &macro_tap &offtog MOVER>;
        };

        off1r34: OffMOVERR34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(DOT) DOT &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(DOT) DOT &macro_tap &offtog MOVER>;
        };

        off1r35: OffMOVERR35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp SLASH &macro_pause_for_release &macro_release &kp SLASH &macro_tap &offtog MOVER>;
        };

        off1r36: OffMOVERR36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp BACKSLASH &macro_pause_for_release &macro_release &kp BACKSLASH &macro_tap &offtog MOVER>;
        };

        off1r41: OffMOVERR41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LCTRL RETURN &macro_pause_for_release &macro_release &mt LCTRL RETURN &macro_tap &offtog MOVER>;
        };

        off1r42: OffMOVERR42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &lt NUMER SPACE &macro_pause_for_release &macro_release &lt NUMER SPACE &macro_tap &offtog MOVER>;
        };

        off1r43: OffMOVERR43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &motomoto QUICK CHAINS &macro_pause_for_release &macro_release &motomoto QUICK CHAINS &macro_tap &offtog MOVER>;
        };

        off5l11: OffPARENSL11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp TAB &macro_pause_for_release &macro_release &kp TAB &macro_tap &offtog PARENS>;
        };

        off5l12: OffPARENSL12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp Q &macro_pause_for_release &macro_release &kp Q &macro_tap &offtog PARENS>;
        };

        off5l13: OffPARENSL13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp W &macro_pause_for_release &macro_release &kp W &macro_tap &offtog PARENS>;
        };

        off5l14: OffPARENSL14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp E &macro_pause_for_release &macro_release &kp E &macro_tap &offtog PARENS>;
        };

        off5l15: OffPARENSL15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp R &macro_pause_for_release &macro_release &kp R &macro_tap &offtog PARENS>;
        };

        off5l16: OffPARENSL16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(T) T &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(T) T &macro_tap &offtog PARENS>;
        };

        off5l21: OffPARENSL21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LSHIFT BACKSPACE &macro_pause_for_release &macro_release &mt LSHIFT BACKSPACE &macro_tap &offtog PARENS>;
        };

        off5l22: OffPARENSL22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp A &macro_pause_for_release &macro_release &kp A &macro_tap &offtog PARENS>;
        };

        off5l23: OffPARENSL23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LSHIFT S &macro_pause_for_release &macro_release &mt LSHIFT S &macro_tap &offtog PARENS>;
        };

        off5l24: OffPARENSL24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LGUI D &macro_pause_for_release &macro_release &mt LGUI D &macro_tap &offtog PARENS>;
        };

        off5l25: OffPARENSL25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LALT F &macro_pause_for_release &macro_release &mt LALT F &macro_tap &offtog PARENS>;
        };

        off5l26: OffPARENSL26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp G &macro_pause_for_release &macro_release &kp G &macro_tap &offtog PARENS>;
        };

        off5l31: OffPARENSL31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mkpmmkpMINUSkpPLUS LCTRL 0 &macro_pause_for_release &macro_release &mkpmmkpMINUSkpPLUS LCTRL 0 &macro_tap &offtog PARENS>;
        };

        off5l32: OffPARENSL32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp Z &macro_pause_for_release &macro_release &kp Z &macro_tap &offtog PARENS>;
        };

        off5l33: OffPARENSL33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp X &macro_pause_for_release &macro_release &kp X &macro_tap &offtog PARENS>;
        };

        off5l34: OffPARENSL34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &xkpXdgConfigkp 0 C &macro_pause_for_release &macro_release &xkpXdgConfigkp 0 C &macro_tap &offtog PARENS>;
        };

        off5l35: OffPARENSL35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp V &macro_pause_for_release &macro_release &kp V &macro_tap &offtog PARENS>;
        };

        off5l36: OffPARENSL36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp B &macro_pause_for_release &macro_release &kp B &macro_tap &offtog PARENS>;
        };

        off5l41: OffPARENSL41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &motomoto QUICK CHAINS &macro_pause_for_release &macro_release &motomoto QUICK CHAINS &macro_tap &offtog PARENS>;
        };

        off5l42: OffPARENSL42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &momommtoCHAINSkpUNDER NUMER 0 &macro_pause_for_release &macro_release &momommtoCHAINSkpUNDER NUMER 0 &macro_tap &offtog PARENS>;
        };

        off5l43: OffPARENSL43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LCTRL ESCAPE &macro_pause_for_release &macro_release &mt LCTRL ESCAPE &macro_tap &offtog PARENS>;
        };

        off5r11: OffPARENSR11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp Y &macro_pause_for_release &macro_release &kp Y &macro_tap &offtog PARENS>;
        };

        off5r12: OffPARENSR12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp U &macro_pause_for_release &macro_release &kp U &macro_tap &offtog PARENS>;
        };

        off5r13: OffPARENSR13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp I &macro_pause_for_release &macro_release &kp I &macro_tap &offtog PARENS>;
        };

        off5r14: OffPARENSR14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp O &macro_pause_for_release &macro_release &kp O &macro_tap &offtog PARENS>;
        };

        off5r15: OffPARENSR15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp P &macro_pause_for_release &macro_release &kp P &macro_tap &offtog PARENS>;
        };

        off5r16: OffPARENSR16 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LBKT &macro_pause_for_release &macro_release &kp LBKT &macro_tap &offtog PARENS>;
        };

        off5r21: OffPARENSR21 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp H &macro_pause_for_release &macro_release &kp H &macro_tap &offtog PARENS>;
        };

        off5r22: OffPARENSR22 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LALT J &macro_pause_for_release &macro_release &mt LALT J &macro_tap &offtog PARENS>;
        };

        off5r23: OffPARENSR23 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LGUI K &macro_pause_for_release &macro_release &mt LGUI K &macro_tap &offtog PARENS>;
        };

        off5r24: OffPARENSR24 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &rmtkpkp LSHIFT L &macro_pause_for_release &macro_release &rmtkpkp LSHIFT L &macro_tap &offtog PARENS>;
        };

        off5r25: OffPARENSR25 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(SEMI) SEMI &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(SEMI) SEMI &macro_tap &offtog PARENS>;
        };

        off5r26: OffPARENSR26 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(SQT) SQT &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(SQT) SQT &macro_tap &offtog PARENS>;
        };

        off5r31: OffPARENSR31 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp N &macro_pause_for_release &macro_release &kp N &macro_tap &offtog PARENS>;
        };

        off5r32: OffPARENSR32 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(M) M &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(M) M &macro_tap &offtog PARENS>;
        };

        off5r33: OffPARENSR33 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(COMMA) COMMA &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(COMMA) COMMA &macro_tap &offtog PARENS>;
        };

        off5r34: OffPARENSR34 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &htTapNoRepeatkp RG(DOT) DOT &macro_pause_for_release &macro_release &htTapNoRepeatkp RG(DOT) DOT &macro_tap &offtog PARENS>;
        };

        off5r35: OffPARENSR35 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp SLASH &macro_pause_for_release &macro_release &kp SLASH &macro_tap &offtog PARENS>;
        };

        off5r36: OffPARENSR36 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &kp BACKSLASH &macro_pause_for_release &macro_release &kp BACKSLASH &macro_tap &offtog PARENS>;
        };

        off5r41: OffPARENSR41 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &mt LCTRL RETURN &macro_pause_for_release &macro_release &mt LCTRL RETURN &macro_tap &offtog PARENS>;
        };

        off5r42: OffPARENSR42 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &lt NUMER SPACE &macro_pause_for_release &macro_release &lt NUMER SPACE &macro_tap &offtog PARENS>;
        };

        off5r43: OffPARENSR43 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press &motomoto QUICK CHAINS &macro_pause_for_release &macro_release &motomoto QUICK CHAINS &macro_tap &offtog PARENS>;
        };

        parens: OpenClose_parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT &to PARENS>;
        };

        squotes: OpenClose_squotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp SQT &kp LEFT &to PARENS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        System {
            bindings = <&to SYS>;
            key-positions = <4 5>;
            timeout-ms = <100>;
            require-prior-idle-ms = <500>;
        };

        LeftEnter {
            bindings = <&kp RETURN>;
            key-positions = <37 38>;
        };

        LeftSpace {
            bindings = <&kp SPACE>;
            key-positions = <36 37>;
        };

        RightAltWinShift {
            bindings = <&kp LA(LG(LSHIFT))>;
            key-positions = <19 20 21>;
        };

        RightAltWin {
            bindings = <&htkpto LA(LWIN) MOVER>;
            key-positions = <19 20>;
        };

        RightWinShift_Caps {
            bindings = <&htkpcaps_word LG(LSHIFT) 0>;
            key-positions = <20 21>;
        };

        MiddleMouse {
            bindings = <&mkp MCLK>;
            key-positions = <27 28>;
            timeout-ms = <100>;
            require-prior-idle-ms = <200>;
        };

        Parens {
            bindings = <&parens>;
            key-positions = <16 19>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        Curlies {
            bindings = <&curlies>;
            key-positions = <15 20>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        Brackets {
            bindings = <&brackets>;
            key-positions = <14 21>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        DoubleQuotes {
            bindings = <&dquotes>;
            key-positions = <4 7>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        SingleQuotes {
            bindings = <&squotes>;
            key-positions = <3 8>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };

        BackQuotes {
            bindings = <&htCodeBlockbquotes 0 0>;
            key-positions = <2 9>;
            timeout-ms = <50>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp TAB                      &kp Q  &kp W         &kp E                   &kp R                           &htTapNoRepeatkp RG(T) T  &kp Y             &kp U                     &kp I                             &kp O                         &kp P                           &kp LBKT
&mt LSHIFT BACKSPACE         &kp A  &mt LSHIFT S  &mt LGUI D              &mt LALT F                      &kp G                     &kp H             &mt LALT J                &mt LGUI K                        &rmtkpkp LSHIFT L             &htTapNoRepeatkp RG(SEMI) SEMI  &htTapNoRepeatkp RG(SQT) SQT
&mkpmmkpMINUSkpPLUS LCTRL 0  &kp Z  &kp X         &xkpXdgConfigkp 0 C     &kp V                           &kp B                     &kp N             &htTapNoRepeatkp RG(M) M  &htTapNoRepeatkp RG(COMMA) COMMA  &htTapNoRepeatkp RG(DOT) DOT  &kp SLASH                       &kp BACKSLASH
                                                  &motomoto QUICK CHAINS  &momommtoCHAINSkpUNDER NUMER 0  &mt LCTRL ESCAPE          &mt LCTRL RETURN  &lt NUMER SPACE           &motomoto QUICK CHAINS
            >;
        };

        MOVER {
            bindings = <
&off1l11  &off1l12  &off1l13  &off1l14  &off1l15  &off1l16  &off1r11  &off1r12       &off1r13     &off1r14          &off1r15  &off1r16
&off1l21  &off1l22  &off1l23  &off1l24  &off1l25  &off1l26  &kp LEFT  &mt LALT DOWN  &mt LGUI UP  &mt LSHIFT RIGHT  &off1r25  &off1r26
&off1l31  &off1l32  &off1l33  &off1l34  &off1l35  &off1l36  &off1r31  &off1r32       &off1r33     &off1r34          &off1r35  &off1r36
                              &off1l41  &off1l42  &to BASE  &off1r41  &off1r42       &off1r43
            >;
        };

        NUMER {
            bindings = <
&kp LS(TAB)     &trans  &trans  &trans  &trans          &kp TILDE  &kp N0             &kp N1       &kp N2                         &kp N3                       &trans         &kp RBKT
&kp DELETE      &trans  &trans  &trans  &trans          &trans     &mmkpEQUALkpEQUAL  &mt LALT N4  &mt LGUI N5                    &mt LSHIFT N6                &kp COLON      &mmkpDQTkpGRAVE
&mt LCTRL PLUS  &trans  &trans  &trans  &kp LS(INSERT)  &trans     &kp PLUS           &kp N7       &htTapNoRepeatkp RG(COMMA) N8  &htTapNoRepeatkp RG(DOT) N9  &kp LS(SLASH)  &kp PIPE
                                &trans  &kp UNDER       &trans     &trans             &trans       &trans
            >;
        };

        QUICK {
            bindings = <
&trans  &trans  &trans  &trans  &kp LG(C_VOL_UP)  &kp C_VOL_UP  &trans         &trans          &trans          &trans          &kp PSCRN  &kp LC(RBKT)
&trans  &trans  &trans  &trans  &kp LG(C_VOL_DN)  &kp C_VOL_DN  &kp HOME       &mt LALT PG_DN  &mt LGUI PG_UP  &mt LSHIFT END  &trans     &trans
&trans  &trans  &trans  &trans  &trans            &trans        &trans         &trans          &trans          &trans          &trans     &trans
                        &trans  &trans            &trans        &mt LCTRL F10  &kp F11         &kp F12
            >;
        };

        SYS {
            bindings = <
&bootloader   &to BASE      &to BASE        &to BASE      &sys_reset    &to BASE      &to BASE        &out OUT_USB  &to BASE  &to BASE  &to BASE  &to BASE
&bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2    &bt BT_SEL 1  &bt BT_SEL 0  &to BASE      &to BASE        &to BASE      &to BASE  &to BASE  &to BASE  &to BASE
&to BASE      &to BASE      &bt BT_CLR_ALL  &bt BT_CLR    &out OUT_USB  &out OUT_BLE  &bt BT_CLR_ALL  &to BASE      &to BASE  &to BASE  &to BASE  &to BASE
                                            &to BASE      &to BASE      &to BASE      &to BASE        &to BASE      &to BASE
            >;
        };

        PARENS {
            bindings = <
&off5l11            &off5l12  &off5l13  &off5l14  &off5l15                       &off5l16  &off5r11          &off5r12  &off5r13  &off5r14                  &off5r15  &off5r16
&Offbspcdel PARENS  &off5l22  &off5l23  &off5l24  &off5l25                       &off5l26  &off5r21          &off5r22  &off5r23  &OffmtLSHIFTRIGHT PARENS  &off5r25  &off5r26
&off5l31            &off5l32  &off5l33  &off5l34  &off5l35                       &off5l36  &off5r31          &off5r32  &off5r33  &off5r34                  &off5r35  &off5r36
                                        &off5l41  &OffmotomotoNUMERMOVER PARENS  &to BASE  &OffReRet PARENS  &off5r42  &off5r43
            >;
        };

        CHAINS {
            bindings = <
&to BASE  &to BASE  &to BASE      &to BASE  &to BASE      &to BASE      &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to CHAINS_S  &to BASE  &to CHAINS_F  &to CHAINS_G  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE      &to BASE  &to BASE      &to BASE      &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                                  &to BASE  &to BASE      &to BASE      &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_F {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE              &OffKey CHAINS_F F1   &OffKey CHAINS_F F2   &OffKey CHAINS_F F3  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE              &OffKey CHAINS_F F4   &OffKey CHAINS_F F5   &OffKey CHAINS_F F6  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE              &OffKey CHAINS_F F7   &OffKey CHAINS_F F8   &OffKey CHAINS_F F9  &to BASE  &to BASE
                              &to BASE  &to BASE  &to BASE  &OffKey CHAINS_F F10  &OffKey CHAINS_F F11  &OffKey CHAINS_F F12
            >;
        };

        CHAINS_G {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to CHAINS_GI  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE
                              &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_GI {
            bindings = <
&to BASE  &to BASE  &to BASE  &OffGoIfError CHAINS_GI  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE                 &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE                 &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE                 &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_S {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to CHAINS_SD  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE       &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };

        CHAINS_SD {
            bindings = <
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE             &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &OffKey CHAINS_SD X  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
&to BASE  &to BASE  &to BASE  &to BASE  &to BASE             &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE  &to BASE
                              &to BASE  &to BASE             &to BASE  &to BASE  &to BASE  &to BASE
            >;
        };
    };
};
